"use strict";
(function () {
    const MachineMaster = function () {
        return new MachineMaster.init();
    }
    MachineMaster.init = function () {
        $D.init.call(this);
        this.$tblMachine = "";
        this.$tblHeatSensor = "";
        this.$tblElectricitySensor = "";
        this.$tblWaterSensor = "";
        this.$MachineID = 0;
        this.$SelectCounter = 0;
        this.$SelectSameSensor = "";
        this.$WaterSensorValidation = "Water";
        this.$ElectricSensorValidation = "Electric";
        this.$HeatSensorValidation = "Heat";
    }
    MachineMaster.prototype = {
        drawDatatables: function () {
            var self = this;
            if (!$.fn.DataTable.isDataTable('#tblMachine')) {
                self.$tblMachine = $('#tblMachine').DataTable({
                    processing: true,
                    serverSide: true,
                    select: true,
                    "order": [[0, "asc"]],
                    "pageLength": 25,
                    "ajax": {
                        "url": "/MasterMaintenance/MachineMaster/GetMachineList",
                        "type": "POST",
                        "datatype": "json",
                    },
                    dataSrc: "data",
                    scrollY: '100%', scrollX: '100%',
                    columns: [
                        { title: "Machine Name", data: "MachineName" },
                        //{
                        //    title: "Target Temperature", data: "TargetTemperature", render: function (data) {
                        //        return data + "°"
                        //    }
                        //},
                        //{ title: "Time Interval", data: "TimeInterval" },
                        {
                            title: "Status", data: "IsActive", render: function (data) {
                                if (data === "0") {
                                    return "Active"
                                }
                                else {
                                    return "Inactive"
                                }
                            }
                        },

                    ],
                    "createdRow": function (row, data, dataIndex) {
                        $(row).attr('data-id', data.ID);
                    }
                });
            }
            if (!$.fn.DataTable.isDataTable('#tblHeatSensor')) {
                self.$tblHeatSensor = $('#tblHeatSensor').DataTable({
                    processing: true,
                    serverSide: true,
                    select: true,
                    "order": [[0, "asc"]],
                    "pageLength": 25,
                    "ajax": {
                        "url": "/MasterMaintenance/MachineMaster/GetHeatIPAddressList",
                        "type": "POST",
                        "datatype": "json",
                        "data": function (d) {
                            d.SensorType = 1;
                            d.MachineID = self.$MachineID;
                        }
                    },
                    dataSrc: "data",
                    scrollY: '100%', scrollX: '100%',
                    bFilter: false, bInfo: false,
                    columns: [
                        { title: "IP Address", data: "IpAddress" },
                        {
                            title: "Effective Date", data: "EffectiveDate", render: function (data) {
                                return $F(data).formatDate("mm/dd/yyyy");
                            }
                        },
                    ],
                    "createdRow": function (row, data, dataIndex) {
                        $(row).attr('data-id', data.ID);
                        $(row).attr('ID', data.ID);
                    }
                });
            }
            if (!$.fn.DataTable.isDataTable('#tblElectricitySensor')) {
                self.$tblElectricitySensor = $('#tblElectricitySensor').DataTable({
                    processing: true,
                    serverSide: true,
                    select: true,
                    "order": [[0, "asc"]],
                    "pageLength": 25,
                    "ajax": {
                        "url": "/MasterMaintenance/MachineMaster/GetElectricityIPAddressList",
                        "type": "POST",
                        "datatype": "json",
                        "data": function (d) {
                            d.SensorType = 3;
                            d.MachineID = self.$MachineID;
                        }
                    },
                    dataSrc: "data",
                    bFilter: false, bInfo: false,
                    scrollY: '100%', scrollX: '100%',
                    columns: [
                        { title: "IP Address", data: "IpAddress" },
                        {
                            title: "Effective Date", data: "EffectiveDate", render: function (data) {
                                return $F(data).formatDate("mm/dd/yyyy");
                            }
                        },
                    ],
                    "createdRow": function (row, data, dataIndex) {
                        $(row).attr('data-id', data.ID);
                        $(row).attr('ID', data.ID);
                    }
                });
            }
            if (!$.fn.DataTable.isDataTable('#tblWaterSensor')) {
                self.$tblWaterSensor = $('#tblWaterSensor').DataTable({
                    processing: true,
                    serverSide: true,
                    select: true,
                    "order": [[0, "asc"]],
                    "pageLength": 25,
                    "ajax": {
                        "url": "/MasterMaintenance/MachineMaster/GetWaterIPAddressList",
                        "type": "POST",
                        "datatype": "json",
                        "data": function (d) {
                            d.SensorType = 2;
                            d.MachineID = self.$MachineID;
                        }
                    },
                    dataSrc: "data",
                    bFilter: false, bInfo: false,
                    scrollY: '100%', scrollX: '100%',
                    columns: [
                        { title: "IP Address", data: "IpAddress" },
                        {
                            title: "Effective Date", data: "EffectiveDate", render: function (data) {
                                return $F(data).formatDate("mm/dd/yyyy");
                            }
                        },
                    ],
                    "createdRow": function (row, data, dataIndex) {
                        $(row).attr('data-id', data.ID);
                        $(row).attr('ID', data.ID);
                    }
                });
            }
            return this;
        },
        cancelMachineForm: function () {
            var self = this;
            self.clearFromData("frmMachine");
            $("#btnSaveMachine .btnLabel").text(" Save");
            $("#mdlMachineTitle").text(" Create Machine");
            $("#mdlMachine").modal("hide");
            return this;
        },
        cancelMachineTbl: function () {
            var self = this;
            $('#btnEditMachine').attr("disabled", "disabled");
            $('#btnDeleteMachine').attr("disabled", "disabled");
            $('#btnSetIpAddress').attr("disabled", "disabled");
            return this;
        },
        saveMachine: function () {
            var self = this;
            self.formData = $('#frmMachine').serializeArray();
            self.formAction = '/MasterMaintenance/MachineMaster/SaveMachine';
            self.setJsonData().sendData().then(function () {
                self.$tblMachine.ajax.reload(null, false);
                self.cancelMachineTbl();
                self.cancelMachineForm();
            });
            return this;
        },
        deleteMachine: function () {
            var self = this;
            self.machineID = self.$tblMachine.rows({ selected: true }).data()[0].ID;
            self.formAction = '/MasterMaintenance/MachineMaster/DeleteMachine';
            self.jsonData = { ID: self.machineID };
            self.sendData().then(function () {
                self.$tblMachine.ajax.reload(null, false);
                self.cancelMachineTbl();
                self.cancelMachineForm();
            });
            return this;
        },
        populateMachineData: function (machineData) {
            var self = this;
            $("#frmMachine").parsley().reset();
            $("#btnSaveMachine .btnLabel").text(" Update");
            $("#mdlMachineTitle").text(" Edit Machine");
            $("#mdlMachine").modal("show");
            self.populateToFormInputs(machineData, "#frmMachine");
            return this;
        },
        editMachine: function () {
            var self = this;
            self.machineID = self.$tblMachine.rows({ selected: true }).data()[0].ID;
            self.jsonData = { ID: self.machineID };
            self.formAction = '/MasterMaintenance/MachineMaster/GetMachineDetails';
            self.sendData().then(function () {
                self.populateMachineData(self.responseData.machineData);
            });
            return this;
        },
        setupIpAddress: function () {
            var self = this;
            self.$MachineID = self.$tblMachine.rows({ selected: true }).data()[0].ID;
            self.ReloadIpAddressTable();
            $("#mdlIpAddress").modal("show");
            return this;
        },
        saveIpAddress: function () {
            var self = this;
            var json = "";
            json = {
                ID: $("#ipID").val(),
                MachineID: self.$MachineID,
                IpAddress: $("#IpAddress").val(),
                EffectiveDate: $("#EffectiveDate").val(),
                SensorType: $("#SensorType").val()
            };
            self.jsonData = json;
            self.formAction = '/MasterMaintenance/MachineMaster/SaveIPData';
            self.sendData().then(function () {
                self.ReloadIpAddressTable();
                self.cancelIpAddressForm();
            });
            return this;
        },
        ReloadIpAddressTable: function () {
            var self = this;
            setTimeout(function () {
                self.$tblHeatSensor.ajax.reload(null, false);
                self.$tblElectricitySensor.ajax.reload(null, false);
                self.$tblWaterSensor.ajax.reload(null, false);
            }, 1000);
            return this;
        },
        cancelIpAddressForm: function () {
            var self = this;
            self.clearFromData("frmIpAddress");
            self.$SelectSameSensor = "";
            self.$SelectCounter = 0;
            $('#btnEditIpAddress').attr("disabled", "disabled");
            $('#btnDeleteIpAddress').attr("disabled", "disabled");
            return this;
        },
        editIpAddress: function () {
            var self = this;
            self.ipID = 0;
            if (self.$SelectSameSensor === "Heat") {
                self.ipID = self.$tblHeatSensor.rows({ selected: true }).data()[0].ID;
            }
            else if (self.$SelectSameSensor === "Electric") {
                self.ipID = self.$tblElectricitySensor.rows({ selected: true }).data()[0].ID;
            }
            else if (self.$SelectSameSensor === "Water") {
                self.ipID = self.$tblWaterSensor.rows({ selected: true }).data()[0].ID;
            }
            self.jsonData = { ID: self.ipID };
            self.formAction = '/MasterMaintenance/MachineMaster/GetIpAddressDetails';
            self.sendData().then(function () {
                self.populateIpAddData(self.responseData.ipaddressData);
            });
            return this;
        },
        populateIpAddData: function (ipaddressdata) {
            var self = this;
            var json = "";
            json = {
                ID: ipaddressdata.ID,
                IpAddress: ipaddressdata.IpAddress,
                EffectiveDate: $F(ipaddressdata.EffectiveDate).formatDate("mm/dd/yyyy"),
                SensorType: ipaddressdata.SensorType
            }
            $("#frmIpAddress").parsley().reset();
            self.populateToFormInputs(json, "#frmIpAddress");
            return this;
        },
        deleteIpAddress: function () {
            var self = this;
            self.ipID = 0;
            if (self.$SelectSameSensor === "Heat") {
                self.ipID = self.$tblHeatSensor.rows({ selected: true }).data()[0].ID;
            }
            else if (self.$SelectSameSensor === "Electric") {
                self.ipID = self.$tblElectricitySensor.rows({ selected: true }).data()[0].ID;
            }
            else if (self.$SelectSameSensor === "Water") {
                self.ipID = self.$tblWaterSensor.rows({ selected: true }).data()[0].ID;
            }
            self.formAction = '/MasterMaintenance/MachineMaster/DeleteIpAddress';
            self.jsonData = { ID: self.ipID };
            self.sendData().then(function () {
                self.ReloadIpAddressTable();
                self.cancelIpAddressForm();
            });
            return this;
        },
    };
    MachineMaster.init.prototype = $.extend(MachineMaster.prototype, $D.init.prototype);
    MachineMaster.init.prototype = MachineMaster.prototype;
    $(document).ready(function () {
        var Machine = MachineMaster();
        Machine.drawDatatables();
        $("#btnAddMachine").click(function () {
            $("#mdlMachine").modal("show")
        });
        $("#btnCancelMachine").click(function () {
            Machine.cancelMachineForm();
            CUI.setDatatableMaxHeight();
        });
        $("#btnSaveMachine").click(function () {
            $("#frmMachine").submit();
        });
        $("#frmMachine").submit(function (e) {
            e.preventDefault();
            var mode = $("#btnSaveMachine > span.btnLabel").text().toLowerCase();
            Machine.msg = "Are you sure you want to " + mode + " this Machine?";
            Machine.confirmAction().then(function (approve) {
                if (approve)
                    Machine.saveMachine();
            });
        });
        $('#btnDeleteMachine').click(function () {
            Machine.msg = "Are you sure you want to delete this Machine?";
            Machine.confirmAction().then(function (approve) {
                if (approve)
                    Machine.deleteMachine();
            });
        });
        $('#btnEditMachine').click(function () {
            Machine.editMachine();
        });
        $("#btnSetIpAddress").click(function () {
            Machine.setupIpAddress();
        });
        $("#EffectiveDate").datepicker({ todayHighlight: true, autoclose: true });
        $("#frmIpAddress").submit(function (e) {
            e.preventDefault();
            Machine.saveIpAddress();
        });
        $("#btnSaveIpAddress").click(function () {
            $("#frmIpAddress").submit();
        });
        $("#btnCancelIpAddress").click(function () {
            Machine.cancelIpAddressForm();
            $("#mdlIpAddress").modal("hide");
        });
        $("#btnEditIpAddress").click(function () {
            Machine.editIpAddress();
        });
        $("#btnDeleteIpAddress").click(function () {
            Machine.msg = "Are you sure you want to delete this IP Address?";
            Machine.confirmAction().then(function (approve) {
                if (approve)
                    Machine.deleteIpAddress();
            });
        });
        //Special Events
        Machine.$tblMachine.on('draw.dt', function () {
            CUI.dataTableID = "#tblMachine";
            CUI.setDatatableMaxHeightFixed();
        });
        Machine.$tblMachine.on('select', function (e, dt, type, indexes) {
            $('#btnEditMachine').removeAttr("disabled");
            $('#btnDeleteMachine').removeAttr("disabled");
            $('#btnSetIpAddress').removeAttr("disabled");
        });
        Machine.$tblMachine.on('deselect', function (e, dt, type, indexes) {
            $('#btnEditMachine').attr("disabled", "disabled");
            $('#btnDeleteMachine').attr("disabled", "disabled");
            $('#btnSetIpAddress').attr("disabled", "disabled");
        });
        Machine.$tblHeatSensor.on('select', function (e, dt, type, indexes) {
            if (Machine.$SelectCounter === 0) {
                $('#btnEditIpAddress').removeAttr("disabled");
                $('#btnDeleteIpAddress').removeAttr("disabled");
                Machine.$SelectCounter = 1;
                Machine.$SelectSameSensor = "Heat";
            }
            else {
                Machine.showInfo("Please unclick first the other table");
                $("#tblHeatSensor tbody tr").removeClass('selected');
            }
        });
        Machine.$tblHeatSensor.on('deselect', function (e, dt, type, indexes) {
            if (Machine.$SelectCounter === 0) {
                $('#btnEditIpAddress').attr("disabled", "disabled");
                $('#btnDeleteIpAddress').attr("disabled", "disabled");
                Machine.$SelectCounter = 0;
            }
            else if (Machine.$SelectSameSensor === Machine.$HeatSensorValidation) {
                $('#btnEditIpAddress').attr("disabled", "disabled");
                $('#btnDeleteIpAddress').attr("disabled", "disabled");
                Machine.$SelectCounter = 0;
                Machine.$SelectSameSensor = "";
            }
            else {
                Machine.showInfo("Please unclick first the other table");
                $("#tblHeatSensor tbody tr").removeClass('selected');
            }
        });
        Machine.$tblElectricitySensor.on('select', function (e, dt, type, indexes) {
            if (Machine.$SelectCounter === 0) {
                $('#btnEditIpAddress').removeAttr("disabled");
                $('#btnDeleteIpAddress').removeAttr("disabled");
                Machine.$SelectCounter = 1;
                Machine.$SelectSameSensor = "Electric";
            }
            else {
                Machine.showInfo("Please unclick first the other table");
                $("#tblElectricitySensor tbody tr").removeClass('selected');
            }
        });
        Machine.$tblElectricitySensor.on('deselect', function (e, dt, type, indexes) {
            if (Machine.$SelectCounter === 0) {
                $('#btnEditIpAddress').attr("disabled", "disabled");
                $('#btnDeleteIpAddress').attr("disabled", "disabled");
                Machine.$SelectCounter = 0;
            }
            else if (Machine.$SelectSameSensor === Machine.$ElectricSensorValidation) {
                $('#btnEditIpAddress').attr("disabled", "disabled");
                $('#btnDeleteIpAddress').attr("disabled", "disabled");
                Machine.$SelectCounter = 0;
                Machine.$SelectSameSensor = "";
            }
            else {
                Machine.showInfo("Please unclick first the other table");
                $("#tblElectricitySensor tbody tr").removeClass('selected');
            }
        });
        Machine.$tblWaterSensor.on('select', function (e, dt, type, indexes) {
            if (Machine.$SelectCounter === 0) {
                $('#btnEditIpAddress').removeAttr("disabled");
                $('#btnDeleteIpAddress').removeAttr("disabled");
                Machine.$SelectCounter = 1;
                Machine.$SelectSameSensor = "Water";
            }
            else {
                Machine.showInfo("Please unclick first the other table");
                $("#tblWaterSensor tbody tr").removeClass('selected');
            }
        });
        Machine.$tblWaterSensor.on('deselect', function (e, dt, type, indexes) {
            if (Machine.$SelectCounter === 0) {
                $('#btnEditIpAddress').attr("disabled", "disabled");
                $('#btnDeleteIpAddress').attr("disabled", "disabled");
                Machine.$SelectCounter = 0;
            }
            else if (Machine.$SelectSameSensor === Machine.$WaterSensorValidation) {
                $('#btnEditIpAddress').attr("disabled", "disabled");
                $('#btnDeleteIpAddress').attr("disabled", "disabled");
                Machine.$SelectCounter = 0;
                Machine.$SelectSameSensor = "";
            }
            else {
                Machine.showInfo("Please unclick first the other table");
                $("#tblWaterSensor tbody tr").removeClass('selected');
            }

        });
    });
})();
