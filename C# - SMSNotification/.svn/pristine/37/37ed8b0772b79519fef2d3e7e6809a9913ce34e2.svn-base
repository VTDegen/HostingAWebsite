"use strict";
(function () {
    const OperationMaster = function () {
        return new OperationMaster.init();
    }
    OperationMaster.init = function () {
        $D.init.call(this);
        this.$tblOperation = "";
    };
    OperationMaster.prototype = {
        drawDatatables: function () {
            var self = this;
            if (!$.fn.DataTable.isDataTable('#tblOperation')) {
                self.$tblOperation = $('#tblOperation').DataTable({
                    processing: true,
                    serverSide: true,
                    select: true,
                    "order": [[0, "asc"]],
                    "pageLength": 25,
                    "ajax": {
                        "url": "/MasterMaintenance/OperationMaster/GetOperationList",
                        "type": "POST",
                        "datatype": "json",
                    },
                    dataSrc: "data",
                    scrollY: '100%', scrollX: '100%',
                    columns: [
                        {
                            title: "Process", data: "Process"
                        },
                        {
                            title: "Cycle", data: "Cycle"
                        },
                        {
                            title: "Status", data: "IsActive", render: function (data) {
                                if (data === "0") {
                                    return "Active"
                                }
                                else {
                                    return "Inactive"
                                }
                            }
                        },

                    ],
                    "createdRow": function (row, data, dataIndex) {
                        $(row).attr('data-id', data.ID);
                    }
                });
            }
            return this;
        },
        cancelOperationForm: function () {
            var self = this;
            self.clearFromData("frmOperation");
            $("#btnSaveOperation .btnLabel").text(" Save");
            $("#mdlOperationTitle").text(" Create Operation");
            $("#mdlOperation").modal("hide");
            return this;
        },
        cancelOperationTbl: function () {
            var self = this;
            $('#btnEditOperation').attr("disabled", "disabled");
            $('#btnDeleteOperation').attr("disabled", "disabled");
            return this;
        },
        saveOperation: function () {
            var self = this;
            self.formData = $('#frmOperation').serializeArray();
            self.formAction = '/MasterMaintenance/OperationMaster/SaveOperation';
            self.setJsonData().sendData().then(function () {
                self.$tblOperation.ajax.reload(null, false);
                self.cancelOperationTbl();
                self.cancelOperationForm();
            });
            return this;
        },
        deleteOperation: function () {
            var self = this;
            self.operationID = self.$tblOperation.rows({ selected: true }).data()[0].ID;
            if (self.operationID == 10 || self.operationID == 25 || self.ProcessID === 2 || self.ProcessID === 7 || self.ProcessID === 23 || self.ProcessID === 24) {
                self.showWarning("Unable to delete this item");
            }
            else {
                self.formAction = '/MasterMaintenance/OperationMaster/DeleteOperation';
                self.jsonData = { ID: self.operationID };
                self.sendData().then(function () {
                    self.$tblOperation.ajax.reload(null, false);
                    self.cancelOperationTbl();
                    self.cancelOperationForm();
                });
            }
            return this;
        },
        populateOperationData: function (OperationData) {
            var self = this;
            $("#frmOperation").parsley().reset();
            $("#btnSaveOperation .btnLabel").text(" Update");
            $("#mdlOperationTitle").text(" Edit Operation");
            $("#mdlOperation").modal("show");
            self.populateToFormInputs(OperationData, "#frmOperation");
            return this;
        },
        editOperation: function () {
            var self = this;
            self.operationID = self.$tblOperation.rows({ selected: true }).data()[0].ID;
            self.jsonData = { ID: self.operationID };
            self.formAction = '/MasterMaintenance/OperationMaster/GetOperationDetails';
            self.sendData().then(function () {
                self.populateOperationData(self.responseData.operationData);
            });
            return this;
        },
    };
    OperationMaster.init.prototype = $.extend(OperationMaster.prototype, $D.init.prototype);
    OperationMaster.init.prototype = OperationMaster.prototype;
    $(document).ready(function () {
        var Operation = OperationMaster();
        Operation.drawDatatables();
        $("#btnAddOperation").click(function () {
            $("#mdlOperation").modal("show")
        });
        $("#btnSaveOperation").click(function () {
            $("#frmOperation").submit();
        });
        $("#frmOperation").submit(function (e) {
            e.preventDefault();
            var mode = $("#btnSaveOperation > span.btnLabel").text().toLowerCase();
            Operation.msg = "Are you sure you want to " + mode + " this Operation?";
            Operation.confirmAction().then(function (approve) {
                if (approve)
                    Operation.saveOperation();
            });
        });
        $("#btnCancelOperation").click(function () {
            Operation.cancelOperationForm();
            CUI.setDatatableMaxHeight();
        });
        $('#btnDeleteOperation').click(function () {
            Operation.msg = "Are you sure you want to delete this Operation?";
            Operation.confirmAction().then(function (approve) {
                if (approve)
                    Operation.deleteOperation();
            });
        });
        $('#btnEditOperation').click(function () {
            Operation.editOperation();
        });
        Operation.$tblOperation.on('draw.dt', function () {
            CUI.dataTableID = "#tblOperation";
            CUI.setDatatableMaxHeightFixed();
        });
        Operation.$tblOperation.on('select', function (e, dt, type, indexes) {
            $('#btnEditOperation').removeAttr("disabled");
            $('#btnDeleteOperation').removeAttr("disabled");
            $('#btnSetIpAddress').removeAttr("disabled");
        });
        Operation.$tblOperation.on('deselect', function (e, dt, type, indexes) {
            $('#btnEditOperation').attr("disabled", "disabled");
            $('#btnDeleteOperation').attr("disabled", "disabled");
        });
    });
})();
