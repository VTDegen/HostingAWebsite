using Kedica.Areas.Reports.Models;
using Kedica.Areas.Transaction.Models;
using MySql.Data.MySqlClient;
using OfficeOpenXml;
using OfficeOpenXml.Style;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.IO;
using System.Linq;
using System.Web.Mvc;
namespace Kedica.Areas.Reports.Controllers
{
    public class HPCMonitoringSheetController : Controller
    {
        List<string> modelErrors = new List<string>();
        bool error = false;
        // GET: Reports/HPCMonitoringSheet
        public ActionResult Index()
        {
            return View("HPCMonitoringSheet");
        }
        public ActionResult GenerateHPCData(string ProcessDate, string MixerList)
        {
            try
            {
                List<PHCData> HydrationIDList = GetHydrationList(ProcessDate, MixerList);
                string templateFileName = "Hydration_Cycle_Monitoring_Sheet.xlsx";
                string filename = string.Format("Hydration_Cycle_Monitoring_Sheet.xlsx");
                ExcelPackage.LicenseContext = LicenseContext.NonCommercial;
                string dir = Path.GetTempPath();
                FileInfo newFile = new FileInfo(Path.Combine(dir, filename));
                string templatePath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, @"Templates\", templateFileName);
                FileInfo templateFile = new FileInfo(templatePath);

                using (ExcelPackage package = new ExcelPackage(newFile, templateFile))
                {
                    ExcelWorksheet HiddenWorkSheet = package.Workbook.Worksheets["Rev.05"];
                    ExcelWorksheet NewDataSheet;
                    ExcelWorksheet Datahere;
                    ExcelWorkbook mywoorkbook = package.Workbook;
                    int WorkSheetID = 6;
                    int TempWorkSheetID = 5;
                    int WorkSheetCounter = 0;
                    int DataCounter = 0;
                    int OuterCounter = 0;
                    int FirstProcessOuterCounter = 0;
                    int SecondProcessOuterDataCounter = 36;
                    int SecondProcessOuterCounter = 0;
                    int FirstHourlyCheckRow = 0;
                    int FirstHourlyCheck = 16;
                    int SecondHourlyCheckRow = 0;
                    int SecondHourlyCheck = 40;
                    int FirstAFCCheckRow = 0;
                    int FirstAFCAFCCheck = 27;
                    int SecondAFCCheckRow = 0;
                    int SecondAFCAFCCheck = 51;
                    int CounterFlow = 1;
                    int ResetCounterFlow = 0;
                    string SheetName = "";


                    int RowFirstStartTransaction = 12;
                    int RowSecondStartTransaction = 12;
                    int RowThirdStartTransaction = 12;
                    int RowFourthStartTransaction = 12;

                    int RowFirstStartTransaction1 = 0;
                    int RowSecondStartTransaction1 = 0;
                    int RowThirdStartTransaction1 = 0;
                    int RowFourthStartTransaction1 = 0;

                    int RowFirstStartTransaction2 = 0;
                    int RowSecondStartTransaction2 = 0;
                    int RowThirdStartTransaction2 = 0;
                    int RowFourthStartTransaction2 = 0;

                    int TempRowSecondStartTransaction = 0;
                    int TempRowThirdStartTransaction = 0;
                    int TempRowFourthStartTransaction = 0;

                    bool CreateProcessRow = true;
                    bool HourlyCheckRow = true;
                    bool AfterCycleCheckRow = true;
                    bool AfterFinishedCycle = true;
                    bool ResetHeader = true;
                    bool HourlyBodyColumn = true;
                    bool SummaryBodyColumn = true;
                    string Cycle1HourlyCheck = "";
                    string Cycle2HourlyCheck = "";
                    string Cycle3HourlyCheck = "";

                    int Cycel1HourlyCheckCount1 = 0;
                    int Cycel2HourlyCheckCount1 = 0;
                    int Cycel3HourlyCheckCount1 = 0;

                    int Cycel1HourlyCheckCount = 0;
                    int Cycel2HourlyCheckCount = 0;
                    int Cycel3HourlyCheckCount = 0;
                    int TemplateID = HydrationIDList[0].TemplateID;

                    for (int i = 0; i < HydrationIDList.Count; i++)
                    {
                        if (HydrationIDList.Count != 0)
                        {


                            List<PHCData> HydrationMixerList = GetHydrationMixerList(HydrationIDList[DataCounter].ProcessDate, HydrationIDList[DataCounter].MixerID);

                            var NewWorkSheet = "Rev." + WorkSheetID.ToString("D2") + "";
                            var OldWorkSheet = "Rev." + TempWorkSheetID.ToString("D2") + "";
                            if (ResetCounterFlow == 0)
                            {
                                NewDataSheet = Copy(mywoorkbook, OldWorkSheet, NewWorkSheet);
                                Datahere = package.Workbook.Worksheets[NewDataSheet.Name];
                                RowFirstStartTransaction = 12;
                                RowSecondStartTransaction = 12;
                                RowThirdStartTransaction = 12;
                                RowFourthStartTransaction = 12;
                                RowFirstStartTransaction1 = 0;
                                RowSecondStartTransaction1 = 0;
                                RowThirdStartTransaction1 = 0;
                                RowFourthStartTransaction1 = 0;
                                RowFirstStartTransaction2 = 0;
                                RowSecondStartTransaction2 = 0;
                                RowThirdStartTransaction2 = 0;
                                RowFourthStartTransaction2 = 0;
                                OuterCounter = 0;
                                CreateProcessRow = true;
                                HourlyCheckRow = true;
                                AfterCycleCheckRow = true;
                                AfterFinishedCycle = true;
                                SummaryBodyColumn = true;
                                ResetHeader = true;
                                HourlyBodyColumn = true;
                                Cycle1HourlyCheck = "";
                                Cycle2HourlyCheck = "";
                                Cycle3HourlyCheck = "";
                                TempRowSecondStartTransaction = 0;
                                TempRowThirdStartTransaction = 0;
                                TempRowFourthStartTransaction = 0;
                                Cycel1HourlyCheckCount = 0;
                                Cycel2HourlyCheckCount = 0;
                                Cycel3HourlyCheckCount = 0;
                                Cycel1HourlyCheckCount1 = 0;
                                Cycel2HourlyCheckCount1 = 0;
                                Cycel3HourlyCheckCount1 = 0;


                                Datahere.Cells["D10:F10"].Merge = true;
                                Datahere.Cells["D10:F10"].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                Datahere.Cells["D10:F10"].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                Datahere.Cells["D10:F10"].Style.WrapText = true;
                                Datahere.Cells["D10:F10"].Value = HydrationIDList[DataCounter].MachineName;

                                Datahere.Cells["V10:X10"].Merge = true;
                                Datahere.Cells["V10:X10"].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                Datahere.Cells["V10:X10"].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                Datahere.Cells["V10:X10"].Style.WrapText = true;
                                Datahere.Cells["V10:X10"].Value = ProcessDate;
                                List<ProcessList> ProcessDataList = GetProcessDataList(HydrationIDList[ResetCounterFlow].ID);

                                #region Process List
                                //ProcessList
                                for (int proi = 0; proi < ProcessDataList.Count; proi++)
                                {
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Merge = true;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Value = ProcessDataList[proi].Process;
                                    RowFirstStartTransaction++;
                                }
                                for (int hi = 0; hi < HydrationMixerList.Count; hi++)
                                {
                                    List<PHCDataProcessList> HydrationProcessList = GetProcessList(HydrationMixerList[OuterCounter].ID);
                                    List<HPCDataHourlyCheck> HydrationHourlyCheckList = GethourlyCheckData(HydrationMixerList[OuterCounter].ID);
                                    //List<HPCDataAfterCycle> HydrationAFCList = GetAFCList(HydrationMixerList[OuterCounter].ID);
                                    List<HPCSummary> HydrationSummary = GetSummaryList(HydrationMixerList[OuterCounter].ID);
                                    FirstProcessOuterCounter = 0;

                                    FirstHourlyCheck = 16;
                                    FirstAFCCheckRow = 0;
                                    FirstAFCAFCCheck = 27;

                                    //DrawLines
                                    if (HydrationMixerList[OuterCounter].CycleID == 1)
                                    {
                                        for (int proi = 0; proi < HydrationProcessList.Count; proi++)
                                        {
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Value = HydrationProcessList[FirstProcessOuterCounter].ProcessTemplateData;
                                            FirstProcessOuterCounter++;
                                            RowSecondStartTransaction++;
                                        }
                                    }
                                    else if (HydrationMixerList[OuterCounter].CycleID == 2)
                                    {

                                        for (int proi = 0; proi < HydrationProcessList.Count; proi++)
                                        {
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Value = HydrationProcessList[FirstProcessOuterCounter].ProcessTemplateData;
                                            FirstProcessOuterCounter++;
                                            RowThirdStartTransaction++;
                                        }
                                    }
                                    else if (HydrationMixerList[OuterCounter].CycleID == 3)
                                    {
                                        for (int proi = 0; proi < HydrationProcessList.Count; proi++)
                                        {
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Value = HydrationProcessList[FirstProcessOuterCounter].ProcessTemplateData;
                                            FirstProcessOuterCounter++;
                                            RowFourthStartTransaction++;
                                        }
                                    }


                                    OuterCounter++;
                                }
                                if (CreateProcessRow)
                                {
                                    OuterCounter = 0;
                                    List<PHCDataProcessList> HydrationProcessList = GetProcessList(HydrationMixerList[OuterCounter].ID);
                                    RowSecondStartTransaction = 12;
                                    RowThirdStartTransaction = 12;
                                    RowFourthStartTransaction = 12;
                                    for (int drawlinei = 0; drawlinei < 3; drawlinei++)
                                    {
                                        if (drawlinei == 0)
                                        {
                                            for (int proi = 0; proi < HydrationProcessList.Count; proi++)
                                            {
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Merge = true;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                                RowSecondStartTransaction++;
                                            }
                                        }
                                        else if (drawlinei == 1)
                                        {
                                            for (int proi = 0; proi < HydrationProcessList.Count; proi++)
                                            {
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Merge = true;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                                RowThirdStartTransaction++;
                                            }
                                        }
                                        else if (drawlinei == 2)
                                        {
                                            for (int proi = 0; proi < HydrationProcessList.Count; proi++)
                                            {
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Merge = true;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                                RowFourthStartTransaction++;
                                            }
                                            CreateProcessRow = false;
                                        }
                                    }

                                }
                                #endregion
                                #region Hourly Checking Header
                                if (HourlyCheckRow)
                                {
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Merge = false;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Merge = true;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Font.Bold = true;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Value = "Hourly Checking";

                                    //First
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Merge = false;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Merge = true;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Value = "Time";

                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Merge = false;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Merge = true;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Value = "Temp (40-80°c)";

                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Merge = false;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Merge = true;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Value = "Water (Li)";
                                    //Second
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Merge = false;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Merge = true;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Value = "Time";

                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Merge = false;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Merge = true;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Value = "Temp (40-80°c)";

                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Merge = false;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Merge = true;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Value = "Water (Li)";
                                    //Third
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Merge = false;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Merge = true;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Value = "Time";

                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Merge = false;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Merge = true;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Value = "Temp (40-80°c)";

                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Merge = false;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Merge = true;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Value = "Water (Li)";
                                    HourlyCheckRow = false;
                                    RowFirstStartTransaction++;
                                    RowSecondStartTransaction++;
                                    RowThirdStartTransaction++;
                                    RowFourthStartTransaction++;

                                    RowFirstStartTransaction1 = RowFirstStartTransaction;
                                    RowSecondStartTransaction1 = RowSecondStartTransaction;
                                    RowThirdStartTransaction1 = RowThirdStartTransaction;
                                    RowFourthStartTransaction1 = RowFourthStartTransaction;

                                }
                                #endregion
                                #region Hourly Checking Data
                                OuterCounter = 0;
                                for (int hi = 0; hi < HydrationMixerList.Count; hi++)
                                {
                                    List<PHCDataProcessList> HydrationProcessList = GetProcessList(HydrationMixerList[OuterCounter].ID);
                                    List<HPCDataHourlyCheck> HydrationHourlyCheckList = GethourlyCheckData(HydrationMixerList[OuterCounter].ID);
                                    //List<HPCDataAfterCycle> HydrationAFCList = GetAFCList(HydrationMixerList[OuterCounter].ID);
                                    List<HPCSummary> HydrationSummary = GetSummaryList(HydrationMixerList[OuterCounter].ID);
                                    FirstHourlyCheckRow = 0;
                                    bool isFound = true;
                                    bool Checking = false;
                                    int ThirdRow = 0;
                                    int SecondRow = 0;
                                    int FirstRow = 0;
                                    if (HydrationHourlyCheckList[HydrationHourlyCheckList.Count - 3].HeatTemp != "")
                                    {
                                        ThirdRow = Convert.ToInt32(Convert.ToDecimal(HydrationHourlyCheckList[HydrationHourlyCheckList.Count - 3].HeatTemp));
                                    }
                                    if (HydrationHourlyCheckList[HydrationHourlyCheckList.Count - 2].HeatTemp != "")
                                    {
                                        SecondRow = Convert.ToInt32(Convert.ToDecimal(HydrationHourlyCheckList[HydrationHourlyCheckList.Count - 2].HeatTemp));
                                    }
                                    if (HydrationHourlyCheckList[HydrationHourlyCheckList.Count - 1].HeatTemp != "")
                                    {
                                        FirstRow = Convert.ToInt32(Convert.ToDecimal(HydrationHourlyCheckList[HydrationHourlyCheckList.Count - 1].HeatTemp));
                                    }
                                    //DrawLines
                                    if (HydrationMixerList[OuterCounter].CycleID == 1)
                                    {

                                        for (int nm = 0; nm < HydrationHourlyCheckList.Count; nm++)
                                        {
                                            if (!isFound)
                                            {
                                                if (Checking)
                                                {
                                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction + ""].Value = "";
                                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction + ""].Value = "";
                                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Value = "";
                                                }
                                            }
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction + ""].Value = HydrationHourlyCheckList[FirstHourlyCheckRow].TimeSetup;
                                            Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction + ""].Value = HydrationHourlyCheckList[FirstHourlyCheckRow].HeatTemp;
                                            Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Value = HydrationHourlyCheckList[FirstHourlyCheckRow].WaterTemp;

                                            FirstHourlyCheckRow++;
                                            RowSecondStartTransaction++;
                                        }
                                        Cycel1HourlyCheckCount1 = HydrationHourlyCheckList.Count;
                                    }
                                    else if (HydrationMixerList[OuterCounter].CycleID == 2)
                                    {
                                        for (int nm = 0; nm < HydrationHourlyCheckList.Count; nm++)
                                        {
                                            if (!isFound)
                                            {
                                                if (Checking)
                                                {
                                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction + ""].Value = "";
                                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction + ""].Value = "";
                                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Value = "";
                                                }
                                            }
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction + ""].Value = HydrationHourlyCheckList[FirstHourlyCheckRow].TimeSetup;
                                            Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction + ""].Value = HydrationHourlyCheckList[FirstHourlyCheckRow].HeatTemp;
                                            Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Value = HydrationHourlyCheckList[FirstHourlyCheckRow].WaterTemp;

                                            FirstHourlyCheckRow++;
                                            RowThirdStartTransaction++;
                                        }
                                        Cycel2HourlyCheckCount1 = HydrationHourlyCheckList.Count;
                                    }
                                    else if (HydrationMixerList[OuterCounter].CycleID == 3)
                                    {
                                        for (int nm = 0; nm < HydrationHourlyCheckList.Count; nm++)
                                        {
                                            if (!isFound)
                                            {
                                                if (Checking)
                                                {
                                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction + ""].Value = "";
                                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction + ""].Value = "";
                                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Value = "";
                                                }
                                            }
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction + ""].Value = HydrationHourlyCheckList[FirstHourlyCheckRow].TimeSetup;
                                            Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction + ""].Value = HydrationHourlyCheckList[FirstHourlyCheckRow].HeatTemp;
                                            Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Value = HydrationHourlyCheckList[FirstHourlyCheckRow].WaterTemp;

                                            FirstHourlyCheckRow++;
                                            RowFourthStartTransaction++;
                                        }
                                        Cycel3HourlyCheckCount1 = HydrationHourlyCheckList.Count;
                                    }
                                    OuterCounter++;
                                }
                                if (HourlyBodyColumn)
                                {
                                    OuterCounter = 0;
                                    List<HPCDataHourlyCheck> HydrationHourlyCheckList = GethourlyCheckData(HydrationMixerList[OuterCounter].ID);
                                    RowSecondStartTransaction = 12;
                                    RowThirdStartTransaction = 12;
                                    RowFourthStartTransaction = 12;

                                    RowFirstStartTransaction = RowFirstStartTransaction1;
                                    RowSecondStartTransaction = RowSecondStartTransaction1;
                                    RowThirdStartTransaction = RowThirdStartTransaction1;
                                    RowFourthStartTransaction = RowFourthStartTransaction1;
                                    int[] LargeNumber = { Cycel1HourlyCheckCount1, Cycel2HourlyCheckCount1, Cycel3HourlyCheckCount1 };

                                    int maxValue = LargeNumber.Max();

                                    for (int drawlinei = 0; drawlinei < 4; drawlinei++)
                                    {
                                        if (drawlinei == 0)
                                        {
                                            for (int proi = 0; proi < maxValue; proi++)
                                            {
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Merge = true;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Value = (proi + 1);
                                                RowFirstStartTransaction++;
                                            }
                                        }
                                        else if (drawlinei == 1)
                                        {
                                            for (int proi = 0; proi < maxValue; proi++)
                                            {
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Merge = false;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Merge = true;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;


                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Merge = false;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Merge = true;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;


                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Merge = false;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Merge = true;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;

                                                RowSecondStartTransaction++;
                                            }
                                        }
                                        else if (drawlinei == 2)
                                        {
                                            for (int proi = 0; proi < maxValue; proi++)
                                            {
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Merge = false;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Merge = true;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;


                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Merge = false;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Merge = true;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;


                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Merge = false;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Merge = true;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;

                                                RowThirdStartTransaction++;
                                            }

                                        }
                                        else if (drawlinei == 3)
                                        {
                                            for (int proi = 0; proi < maxValue; proi++)
                                            {
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Merge = false;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Merge = true;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;

                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Merge = false;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Merge = true;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;

                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Merge = false;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Merge = true;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                                RowFourthStartTransaction++;
                                            }
                                            HourlyBodyColumn = false;
                                        }
                                    }

                                }
                                #endregion
                                #region Mixing Time Finished
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Merge = true;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.WrapText = true;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Value = "Mixing Time Finished";

                                OuterCounter = 0;
                                for (int hi = 0; hi < HydrationMixerList.Count; hi++)
                                {
                                    List<HPCSummary> HydrationSummary = GetSummaryList(HydrationMixerList[OuterCounter].ID);
                                    SecondAFCCheckRow = 0;

                                    //DrawLines
                                    if (HydrationMixerList[OuterCounter].CycleID == 1)
                                    {

                                        Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Merge = true;
                                        Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                        Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                        Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.WrapText = true;
                                        Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                        Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                        Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                        Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                        Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Value = Convert.ToInt32(HydrationSummary.Count).ToString() == "0" ? "" : HydrationSummary[0].MixingTimeFinished;
                                    }
                                    else if (HydrationMixerList[OuterCounter].CycleID == 2)
                                    {
                                        Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Merge = true;
                                        Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                        Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                        Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.WrapText = true;
                                        Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                        Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                        Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                        Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                        Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Value = Convert.ToInt32(HydrationSummary.Count).ToString() == "0" ? "" : HydrationSummary[0].MixingTimeFinished;
                                    }
                                    else if (HydrationMixerList[OuterCounter].CycleID == 3)
                                    {
                                        Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Merge = true;
                                        Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                        Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                        Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.WrapText = true;
                                        Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                        Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                        Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                        Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                        Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Value = Convert.ToInt32(HydrationSummary.Count).ToString() == "0" ? "" : HydrationSummary[0].MixingTimeFinished;
                                    }
                                    OuterCounter++;
                                }
                                TempRowSecondStartTransaction = RowSecondStartTransaction;
                                TempRowThirdStartTransaction = RowThirdStartTransaction;
                                TempRowFourthStartTransaction = RowFourthStartTransaction;

                                RowFirstStartTransaction++;
                                RowSecondStartTransaction++;
                                RowThirdStartTransaction++;
                                RowFourthStartTransaction++;
                                #endregion
                                #region After Finished Cycle Header
                                if (AfterFinishedCycle)
                                {
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Merge = false;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Merge = true;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Font.Bold = true;
                                    Datahere.Row(RowFirstStartTransaction).Height = 25.50;

                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Value = "After Finished Cycle";

                                    //First
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Merge = false;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Merge = true;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Value = "Time";

                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Merge = false;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Merge = true;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Value = "Temp (<60°c)";

                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Merge = false;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Merge = true;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Value = "Result (OK/NG)";
                                    //Second
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Merge = false;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Merge = true;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Value = "Time";

                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Merge = false;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Merge = true;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Value = "Temp (<60°c)";

                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Merge = false;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Merge = true;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Value = "Result (OK/NG)";
                                    //Third
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Merge = false;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Merge = true;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Value = "Time";

                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Merge = false;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Merge = true;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Value = "Temp (<60°c)";

                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Merge = false;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Merge = true;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Value = "Result (OK/NG)";
                                    AfterFinishedCycle = false;
                                    RowFirstStartTransaction++;
                                    RowSecondStartTransaction++;
                                    RowThirdStartTransaction++;
                                    RowFourthStartTransaction++;

                                    RowFirstStartTransaction1 = RowFirstStartTransaction;
                                    RowSecondStartTransaction1 = RowSecondStartTransaction;
                                    RowThirdStartTransaction1 = RowThirdStartTransaction;
                                    RowFourthStartTransaction1 = RowFourthStartTransaction;

                                }
                                #endregion
                                #region After Finished Cycle Data
                                OuterCounter = 0;
                                for (int hi = 0; hi < HydrationMixerList.Count; hi++)
                                {
                                    List<PHCDataProcessList> HydrationProcessList = GetProcessList(HydrationMixerList[OuterCounter].ID);
                                    List<HPCDataHourlyCheck> HydrationHourlyCheckList = GethourlyCheckData(HydrationMixerList[OuterCounter].ID);
                                    List<HPCDataAfterCycle> HydrationAFCList = GetAFCList(HydrationMixerList[OuterCounter].ID);
                                    List<HPCSummary> HydrationSummary = GetSummaryList(HydrationMixerList[OuterCounter].ID);
                                    SecondAFCCheckRow = 0;

                                    //DrawLines
                                    if (HydrationMixerList[OuterCounter].CycleID == 1)
                                    {
                                        List<HydrationAfterCycle> AfterCycleListData = GetAfterCycleListData(ProcessDate, Cycle1HourlyCheck, TemplateID);
                                        List<HPCDataAfterCycle> hydrationAfterCycle = new List<HPCDataAfterCycle>();

                                        int IDCounter = 1;
                                        int CheckCounter = 0;
                                        for (int zi = 1; zi < AfterCycleListData.Count; zi++)
                                        {
                                            string JudgementType = "";
                                            if (Convert.ToInt32(Convert.ToDecimal(AfterCycleListData[zi].TempCheck)) <= 59)
                                            {
                                                CheckCounter++;
                                                JudgementType = "OK";
                                            }
                                            else
                                            {
                                                if (CheckCounter <= 3)
                                                {
                                                    if (CheckCounter == 3)
                                                    {
                                                        CheckCounter++;
                                                    }
                                                    else
                                                    {
                                                        CheckCounter = 0;
                                                    }
                                                }
                                                JudgementType = "NG";
                                            }
                                            if (CheckCounter <= 3)
                                            {
                                                hydrationAfterCycle.Add(new HPCDataAfterCycle
                                                {

                                                    TimeCheck = AfterCycleListData[zi].TimeCheck,
                                                    TempCheck = AfterCycleListData[zi].TempCheck,
                                                    Judgement = JudgementType
                                                });
                                                IDCounter++;
                                            }
                                        }
                                        for (int jk = 0; jk < HydrationAFCList.Count; jk++)
                                        {
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction + ""].Value = HydrationAFCList[SecondAFCCheckRow].TimeCheck;
                                            Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction + ""].Value = HydrationAFCList[SecondAFCCheckRow].TempCheck;
                                            Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Value = HydrationAFCList[SecondAFCCheckRow].Judgement;
                                            SecondAFCCheckRow++;
                                            RowSecondStartTransaction++;
                                        }
                                        Datahere.Cells["F" + TempRowSecondStartTransaction + ":L" + TempRowSecondStartTransaction].Value = HydrationAFCList[HydrationAFCList.Count - 3].TimeCheck;
                                        Cycel1HourlyCheckCount = HydrationAFCList.Count;
                                    }
                                    else if (HydrationMixerList[OuterCounter].CycleID == 2)
                                    {
                                        List<HydrationAfterCycle> AfterCycleListData = GetAfterCycleListData(ProcessDate, Cycle2HourlyCheck, TemplateID);
                                        List<HPCDataAfterCycle> hydrationAfterCycle = new List<HPCDataAfterCycle>();

                                        int IDCounter = 1;
                                        int CheckCounter = 0;
                                        for (int zi = 1; zi < AfterCycleListData.Count; zi++)
                                        {
                                            string JudgementType = "";
                                            if (Convert.ToInt32(Convert.ToDecimal(AfterCycleListData[zi].TempCheck)) <= 59)
                                            {
                                                CheckCounter++;
                                                JudgementType = "OK";
                                            }
                                            else
                                            {
                                                if (CheckCounter <= 3)
                                                {
                                                    if (CheckCounter == 3)
                                                    {
                                                        CheckCounter++;
                                                    }
                                                    else
                                                    {
                                                        CheckCounter = 0;
                                                    }
                                                }
                                                JudgementType = "NG";
                                            }
                                            if (CheckCounter <= 3)
                                            {
                                                hydrationAfterCycle.Add(new HPCDataAfterCycle
                                                {

                                                    TimeCheck = AfterCycleListData[zi].TimeCheck,
                                                    TempCheck = AfterCycleListData[zi].TempCheck,
                                                    Judgement = JudgementType
                                                });
                                                IDCounter++;
                                            }
                                        }
                                        for (int jk = 0; jk < HydrationAFCList.Count; jk++)
                                        {
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction + ""].Value = HydrationAFCList[SecondAFCCheckRow].TimeCheck;
                                            Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction + ""].Value = HydrationAFCList[SecondAFCCheckRow].TempCheck;
                                            Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Value = HydrationAFCList[SecondAFCCheckRow].Judgement;
                                            SecondAFCCheckRow++;
                                            RowThirdStartTransaction++;
                                        }
                                        Datahere.Cells["M" + TempRowThirdStartTransaction + ":S" + TempRowThirdStartTransaction].Value = HydrationAFCList[HydrationAFCList.Count - 3].TimeCheck;
                                        Cycel2HourlyCheckCount = HydrationAFCList.Count;
                                    }
                                    else if (HydrationMixerList[OuterCounter].CycleID == 3)
                                    {
                                        List<HydrationAfterCycle> AfterCycleListData = GetAfterCycleListData(ProcessDate, Cycle3HourlyCheck, TemplateID);
                                        List<HPCDataAfterCycle> hydrationAfterCycle = new List<HPCDataAfterCycle>();

                                        int IDCounter = 1;
                                        int CheckCounter = 0;
                                        for (int zi = 1; zi < AfterCycleListData.Count; zi++)
                                        {
                                            string JudgementType = "";
                                            if (Convert.ToInt32(Convert.ToDecimal(AfterCycleListData[zi].TempCheck)) <= 59)
                                            {
                                                CheckCounter++;
                                                JudgementType = "OK";
                                            }
                                            else
                                            {
                                                if (CheckCounter <= 3)
                                                {
                                                    if (CheckCounter == 3)
                                                    {
                                                        CheckCounter++;
                                                    }
                                                    else
                                                    {
                                                        CheckCounter = 0;
                                                    }
                                                }
                                                JudgementType = "NG";
                                            }
                                            if (CheckCounter <= 3)
                                            {
                                                hydrationAfterCycle.Add(new HPCDataAfterCycle
                                                {

                                                    TimeCheck = AfterCycleListData[zi].TimeCheck,
                                                    TempCheck = AfterCycleListData[zi].TempCheck,
                                                    Judgement = JudgementType
                                                });
                                                IDCounter++;
                                            }
                                        }
                                        for (int jk = 0; jk < HydrationAFCList.Count; jk++)
                                        {
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction + ""].Value = HydrationAFCList[SecondAFCCheckRow].TimeCheck;
                                            Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction + ""].Value = HydrationAFCList[SecondAFCCheckRow].TempCheck;
                                            Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Value = HydrationAFCList[SecondAFCCheckRow].Judgement;
                                            SecondAFCCheckRow++;
                                            RowFourthStartTransaction++;
                                        }
                                        Datahere.Cells["T" + TempRowFourthStartTransaction + ":Z" + TempRowFourthStartTransaction].Value = HydrationAFCList[HydrationAFCList.Count - 3].TimeCheck;
                                        Cycel3HourlyCheckCount = HydrationAFCList.Count;
                                    }
                                    OuterCounter++;
                                }
                                if (AfterCycleCheckRow)
                                {
                                    OuterCounter = 0;
                                    List<HPCDataAfterCycle> HydrationAFCList = GetAFCList(HydrationMixerList[OuterCounter].ID);



                                    int[] LargeNumber = { Cycel1HourlyCheckCount, Cycel2HourlyCheckCount, Cycel3HourlyCheckCount };

                                    int maxValue = LargeNumber.Max();



                                    RowFirstStartTransaction = RowFirstStartTransaction1;
                                    RowSecondStartTransaction = RowSecondStartTransaction1;
                                    RowThirdStartTransaction = RowThirdStartTransaction1;
                                    RowFourthStartTransaction = RowFourthStartTransaction1;

                                    for (int drawlinei = 0; drawlinei < 4; drawlinei++)
                                    {
                                        if (drawlinei == 0)
                                        {
                                            for (int proi = 0; proi < maxValue; proi++)
                                            {
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Merge = true;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Value = (proi + 1);
                                                RowFirstStartTransaction++;
                                            }

                                        }
                                        else if (drawlinei == 1)
                                        {

                                            for (int proi = 0; proi < maxValue; proi++)
                                            {
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Merge = false;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Merge = true;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;


                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Merge = false;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Merge = true;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;


                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Merge = false;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Merge = true;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;


                                                RowSecondStartTransaction++;
                                            }

                                        }
                                        else if (drawlinei == 2)
                                        {

                                            for (int proi = 0; proi < maxValue; proi++)
                                            {
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Merge = false;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Merge = true;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;


                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Merge = false;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Merge = true;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;


                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Merge = false;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Merge = true;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;


                                                RowThirdStartTransaction++;
                                            }

                                        }
                                        else if (drawlinei == 3)
                                        {

                                            for (int proi = 0; proi < maxValue; proi++)
                                            {
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Merge = false;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Merge = true;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;


                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Merge = false;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Merge = true;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;


                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Merge = false;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Merge = true;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;

                                                RowFourthStartTransaction++;
                                            }
                                            AfterCycleCheckRow = false;
                                        }
                                    }

                                    RowFirstStartTransaction1 = RowFirstStartTransaction;
                                    RowSecondStartTransaction1 = RowSecondStartTransaction;
                                    RowThirdStartTransaction1 = RowThirdStartTransaction;
                                    RowFourthStartTransaction1 = RowFourthStartTransaction;

                                }
                                #endregion
                                #region Summary
                                OuterCounter = 0;
                                for (int hi = 0; hi < HydrationMixerList.Count; hi++)
                                {
                                    List<HPCSummary> HydrationSummary = GetSummaryList(HydrationMixerList[OuterCounter].ID);
                                    SecondAFCCheckRow = 0;

                                    //DrawLines
                                    if (HydrationMixerList[OuterCounter].CycleID == 1)
                                    {

                                        Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Value = Convert.ToInt32(HydrationSummary.Count).ToString() == "0" ? "0" : HydrationSummary[0].UnloadingTime;
                                        RowSecondStartTransaction++;
                                        Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Value = Convert.ToInt32(HydrationSummary.Count).ToString() == "0" ? "0" : HydrationSummary[0].OutputWeight;
                                        RowSecondStartTransaction++;
                                        Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Value = Convert.ToInt32(HydrationSummary.Count).ToString() == "0" ? "" : HydrationSummary[0].Remarks;
                                        RowSecondStartTransaction++;
                                    }
                                    else if (HydrationMixerList[OuterCounter].CycleID == 2)
                                    {
                                        Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Value = Convert.ToInt32(HydrationSummary.Count).ToString() == "0" ? "0" : HydrationSummary[0].UnloadingTime;
                                        RowThirdStartTransaction++;
                                        Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Value = Convert.ToInt32(HydrationSummary.Count).ToString() == "0" ? "0" : HydrationSummary[0].OutputWeight;
                                        RowThirdStartTransaction++;
                                        Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Value = Convert.ToInt32(HydrationSummary.Count).ToString() == "0" ? "" : HydrationSummary[0].Remarks;
                                        RowThirdStartTransaction++;
                                    }
                                    else if (HydrationMixerList[OuterCounter].CycleID == 3)
                                    {
                                        Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Value = Convert.ToInt32(HydrationSummary.Count).ToString() == "0" ? "0" : HydrationSummary[0].UnloadingTime;
                                        RowFourthStartTransaction++;
                                        Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Value = Convert.ToInt32(HydrationSummary.Count).ToString() == "0" ? "0" : HydrationSummary[0].OutputWeight;
                                        RowFourthStartTransaction++;
                                        Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Value = Convert.ToInt32(HydrationSummary.Count).ToString() == "0" ? "" : HydrationSummary[0].Remarks;
                                        RowFourthStartTransaction++;
                                    }
                                    OuterCounter++;
                                }
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Merge = true;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.WrapText = true;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Value = "Unloading Time Finished";
                                RowFirstStartTransaction++;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Merge = true;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.WrapText = true;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Value = "Output Weight (kg)";
                                RowFirstStartTransaction++;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Merge = true;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.WrapText = true;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Value = "Remarks";
                                RowFirstStartTransaction++;
                                OuterCounter = 0;
                                if (SummaryBodyColumn)
                                {
                                    RowSecondStartTransaction = RowSecondStartTransaction1;
                                    RowThirdStartTransaction = RowThirdStartTransaction1;
                                    RowFourthStartTransaction = RowFourthStartTransaction1;
                                    for (int hi = 0; hi < 3; hi++)
                                    {
                                        //DrawLines
                                        if (hi == 0)
                                        {
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Merge = true;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.WrapText = true;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                            RowSecondStartTransaction++;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Merge = true;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.WrapText = true;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                            RowSecondStartTransaction++;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Merge = true;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.WrapText = true;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                            RowSecondStartTransaction++;
                                        }
                                        else if (hi == 1)
                                        {
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Merge = true;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.WrapText = true;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                            RowThirdStartTransaction++;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Merge = true;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.WrapText = true;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                            RowThirdStartTransaction++;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Merge = true;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.WrapText = true;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                            RowThirdStartTransaction++;
                                        }
                                        else if (hi == 2)
                                        {
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Merge = true;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.WrapText = true;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                            RowFourthStartTransaction++;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Merge = true;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.WrapText = true;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                            RowFourthStartTransaction++;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Merge = true;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.WrapText = true;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                            RowFourthStartTransaction++;
                                            SummaryBodyColumn = false;
                                        }
                                        OuterCounter++;
                                    }
                                }
                                Datahere.Row(RowFirstStartTransaction).Height = 9.75;
                                RowFirstStartTransaction++;
                                RowSecondStartTransaction++;
                                RowThirdStartTransaction++;
                                RowFourthStartTransaction++;

                                RowFirstStartTransaction2 = RowFirstStartTransaction;
                                RowSecondStartTransaction2 = RowSecondStartTransaction;
                                RowThirdStartTransaction2 = RowThirdStartTransaction;
                                RowFourthStartTransaction2 = RowFourthStartTransaction;

                                #endregion

                            }
                            if (ResetCounterFlow == 1)
                            {
                                RowFirstStartTransaction = RowFirstStartTransaction2;
                                RowSecondStartTransaction = RowSecondStartTransaction2;
                                RowThirdStartTransaction = RowThirdStartTransaction2;
                                RowFourthStartTransaction = RowFourthStartTransaction2;
                                RowFirstStartTransaction1 = 0;
                                RowSecondStartTransaction1 = 0;
                                RowThirdStartTransaction1 = 0;
                                RowFourthStartTransaction1 = 0;
                                OuterCounter = 0;
                                CreateProcessRow = true;
                                HourlyCheckRow = true;
                                AfterCycleCheckRow = true;
                                AfterFinishedCycle = true;
                                SummaryBodyColumn = true;
                                ResetHeader = true;
                                HourlyBodyColumn = true;
                                Cycle1HourlyCheck = "";
                                Cycle2HourlyCheck = "";
                                Cycle3HourlyCheck = "";
                                TempRowSecondStartTransaction = 0;
                                TempRowThirdStartTransaction = 0;
                                TempRowFourthStartTransaction = 0;
                                Cycel1HourlyCheckCount = 0;
                                Cycel2HourlyCheckCount = 0;
                                Cycel3HourlyCheckCount = 0;
                                Cycel1HourlyCheckCount1 = 0;
                                Cycel2HourlyCheckCount1 = 0;
                                Cycel3HourlyCheckCount1 = 0;

                                Datahere = package.Workbook.Worksheets[NewWorkSheet];
                                Datahere.Row(RowFirstStartTransaction).Height = 22.50;

                                Datahere.Cells["A" + RowFirstStartTransaction + ":C" + RowFirstStartTransaction].Merge = true;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":C" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":C" + RowFirstStartTransaction].Style.Font.Bold = true;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":C" + RowFirstStartTransaction].Style.Font.Size = 12;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":C" + RowFirstStartTransaction].Value = "MIXER No.____";


                                Datahere.Cells["D" + RowFirstStartTransaction + ":F" + RowFirstStartTransaction].Merge = true;
                                Datahere.Cells["D" + RowFirstStartTransaction + ":F" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                Datahere.Cells["D" + RowFirstStartTransaction + ":F" + RowFirstStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                Datahere.Cells["D" + RowFirstStartTransaction + ":F" + RowFirstStartTransaction].Style.WrapText = true;
                                Datahere.Cells["D" + RowFirstStartTransaction + ":F" + RowFirstStartTransaction].Value = HydrationIDList[DataCounter].MachineName;

                                Datahere.Cells["T" + RowFirstStartTransaction + ":U" + RowFirstStartTransaction].Merge = true;
                                Datahere.Cells["T" + RowFirstStartTransaction + ":U" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                Datahere.Cells["T" + RowFirstStartTransaction + ":U" + RowFirstStartTransaction].Style.Font.Bold = true;
                                Datahere.Cells["T" + RowFirstStartTransaction + ":U" + RowFirstStartTransaction].Style.Font.Size = 12;
                                Datahere.Cells["T" + RowFirstStartTransaction + ":U" + RowFirstStartTransaction].Value = "DATE.____";

                                Datahere.Cells["V" + RowFirstStartTransaction + ":X" + RowFirstStartTransaction].Merge = true;
                                Datahere.Cells["V" + RowFirstStartTransaction + ":X" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                Datahere.Cells["V" + RowFirstStartTransaction + ":X" + RowFirstStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                Datahere.Cells["V" + RowFirstStartTransaction + ":X" + RowFirstStartTransaction].Style.WrapText = true;
                                Datahere.Cells["V" + RowFirstStartTransaction + ":X" + RowFirstStartTransaction].Value = ProcessDate;
                                RowFirstStartTransaction++;
                                RowSecondStartTransaction++;
                                RowThirdStartTransaction++;
                                RowFourthStartTransaction++;
                                Datahere.Row(RowFirstStartTransaction).Height = 19.50;
                                #region MainHeader
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Merge = true;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.WrapText = true;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Font.Size = 12;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Font.Bold = true;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Value = "PROCESS";

                                Datahere.Cells["F" + RowFirstStartTransaction + ":L" + RowFirstStartTransaction].Merge = true;
                                Datahere.Cells["F" + RowFirstStartTransaction + ":L" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                Datahere.Cells["F" + RowFirstStartTransaction + ":L" + RowFirstStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                Datahere.Cells["F" + RowFirstStartTransaction + ":L" + RowFirstStartTransaction].Style.WrapText = true;
                                Datahere.Cells["F" + RowFirstStartTransaction + ":L" + RowFirstStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["F" + RowFirstStartTransaction + ":L" + RowFirstStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["F" + RowFirstStartTransaction + ":L" + RowFirstStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["F" + RowFirstStartTransaction + ":L" + RowFirstStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["F" + RowFirstStartTransaction + ":L" + RowFirstStartTransaction].Style.Font.Size = 12;
                                Datahere.Cells["F" + RowFirstStartTransaction + ":L" + RowFirstStartTransaction].Style.Font.Bold = true;
                                Datahere.Cells["F" + RowFirstStartTransaction + ":L" + RowFirstStartTransaction].Value = "CYCLE 1";

                                Datahere.Cells["M" + RowFirstStartTransaction + ":S" + RowFirstStartTransaction].Merge = true;
                                Datahere.Cells["M" + RowFirstStartTransaction + ":S" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                Datahere.Cells["M" + RowFirstStartTransaction + ":S" + RowFirstStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                Datahere.Cells["M" + RowFirstStartTransaction + ":S" + RowFirstStartTransaction].Style.WrapText = true;
                                Datahere.Cells["M" + RowFirstStartTransaction + ":S" + RowFirstStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["M" + RowFirstStartTransaction + ":S" + RowFirstStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["M" + RowFirstStartTransaction + ":S" + RowFirstStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["M" + RowFirstStartTransaction + ":S" + RowFirstStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["M" + RowFirstStartTransaction + ":S" + RowFirstStartTransaction].Style.Font.Size = 12;
                                Datahere.Cells["M" + RowFirstStartTransaction + ":S" + RowFirstStartTransaction].Style.Font.Bold = true;
                                Datahere.Cells["M" + RowFirstStartTransaction + ":S" + RowFirstStartTransaction].Value = "CYCLE 2";

                                Datahere.Cells["T" + RowFirstStartTransaction + ":Z" + RowFirstStartTransaction].Merge = true;
                                Datahere.Cells["T" + RowFirstStartTransaction + ":Z" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                Datahere.Cells["T" + RowFirstStartTransaction + ":Z" + RowFirstStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                Datahere.Cells["T" + RowFirstStartTransaction + ":Z" + RowFirstStartTransaction].Style.WrapText = true;
                                Datahere.Cells["T" + RowFirstStartTransaction + ":Z" + RowFirstStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["T" + RowFirstStartTransaction + ":Z" + RowFirstStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["T" + RowFirstStartTransaction + ":Z" + RowFirstStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["T" + RowFirstStartTransaction + ":Z" + RowFirstStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["T" + RowFirstStartTransaction + ":Z" + RowFirstStartTransaction].Style.Font.Size = 12;
                                Datahere.Cells["T" + RowFirstStartTransaction + ":Z" + RowFirstStartTransaction].Style.Font.Bold = true;
                                Datahere.Cells["T" + RowFirstStartTransaction + ":Z" + RowFirstStartTransaction].Value = "CYCLE 3";
                                RowFirstStartTransaction++;
                                RowSecondStartTransaction++;
                                RowThirdStartTransaction++;
                                RowFourthStartTransaction++;

                                RowSecondStartTransaction1 = RowSecondStartTransaction;
                                RowThirdStartTransaction1 = RowThirdStartTransaction;
                                RowFourthStartTransaction1 = RowFourthStartTransaction;

                                #endregion
                                List<ProcessList> ProcessDataList = GetProcessDataList(HydrationIDList[ResetCounterFlow].ID);

                                #region Process List
                                //ProcessList
                                for (int proi = 0; proi < ProcessDataList.Count; proi++)
                                {
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Merge = true;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Value = ProcessDataList[proi].Process;
                                    RowFirstStartTransaction++;
                                }
                                for (int hi = 0; hi < HydrationMixerList.Count; hi++)
                                {
                                    List<PHCDataProcessList> HydrationProcessList = GetProcessList(HydrationMixerList[OuterCounter].ID);
                                    List<HPCDataHourlyCheck> HydrationHourlyCheckList = GethourlyCheckData(HydrationMixerList[OuterCounter].ID);
                                    List<HPCDataAfterCycle> HydrationAFCList = GetAFCList(HydrationMixerList[OuterCounter].ID);
                                    List<HPCSummary> HydrationSummary = GetSummaryList(HydrationMixerList[OuterCounter].ID);
                                    FirstProcessOuterCounter = 0;

                                    FirstHourlyCheck = 16;
                                    FirstAFCCheckRow = 0;
                                    FirstAFCAFCCheck = 27;

                                    //DrawLines
                                    if (HydrationMixerList[OuterCounter].CycleID == 1)
                                    {
                                        for (int proi = 0; proi < HydrationProcessList.Count; proi++)
                                        {
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Value = HydrationProcessList[FirstProcessOuterCounter].ProcessTemplateData;
                                            FirstProcessOuterCounter++;
                                            RowSecondStartTransaction++;
                                        }
                                    }
                                    else if (HydrationMixerList[OuterCounter].CycleID == 2)
                                    {

                                        for (int proi = 0; proi < HydrationProcessList.Count; proi++)
                                        {
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Value = HydrationProcessList[FirstProcessOuterCounter].ProcessTemplateData;
                                            FirstProcessOuterCounter++;
                                            RowThirdStartTransaction++;
                                        }
                                    }
                                    else if (HydrationMixerList[OuterCounter].CycleID == 3)
                                    {
                                        for (int proi = 0; proi < HydrationProcessList.Count; proi++)
                                        {
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Value = HydrationProcessList[FirstProcessOuterCounter].ProcessTemplateData;
                                            FirstProcessOuterCounter++;
                                            RowFourthStartTransaction++;
                                        }
                                    }


                                    OuterCounter++;
                                }
                                if (CreateProcessRow)
                                {
                                    OuterCounter = 0;
                                    List<PHCDataProcessList> HydrationProcessList = GetProcessList(HydrationMixerList[OuterCounter].ID);
                                    RowSecondStartTransaction = RowSecondStartTransaction1;
                                    RowThirdStartTransaction = RowThirdStartTransaction1;
                                    RowFourthStartTransaction = RowFourthStartTransaction1;
                                    for (int drawlinei = 0; drawlinei < 3; drawlinei++)
                                    {
                                        if (drawlinei == 0)
                                        {
                                            for (int proi = 0; proi < HydrationProcessList.Count; proi++)
                                            {
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Merge = true;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                                RowSecondStartTransaction++;
                                            }
                                        }
                                        else if (drawlinei == 1)
                                        {
                                            for (int proi = 0; proi < HydrationProcessList.Count; proi++)
                                            {
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Merge = true;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                                RowThirdStartTransaction++;
                                            }
                                        }
                                        else if (drawlinei == 2)
                                        {
                                            for (int proi = 0; proi < HydrationProcessList.Count; proi++)
                                            {
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Merge = true;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                                RowFourthStartTransaction++;
                                            }
                                            CreateProcessRow = false;
                                        }
                                    }

                                }
                                #endregion
                                #region Hourly Checking Header
                                if (HourlyCheckRow)
                                {
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Merge = false;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Merge = true;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Font.Bold = true;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Value = "Hourly Checking";

                                    //First
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Merge = false;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Merge = true;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Value = "Time";

                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Merge = false;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Merge = true;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Value = "Temp (40-80°c)";

                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Merge = false;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Merge = true;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Value = "Water (Li)";
                                    //Second
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Merge = false;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Merge = true;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Value = "Time";

                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Merge = false;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Merge = true;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Value = "Temp (40-80°c)";

                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Merge = false;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Merge = true;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Value = "Water (Li)";
                                    //Third
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Merge = false;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Merge = true;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Value = "Time";

                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Merge = false;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Merge = true;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Value = "Temp (40-80°c)";

                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Merge = false;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Merge = true;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Value = "Water (Li)";
                                    HourlyCheckRow = false;
                                    RowFirstStartTransaction++;
                                    RowSecondStartTransaction++;
                                    RowThirdStartTransaction++;
                                    RowFourthStartTransaction++;

                                    RowFirstStartTransaction1 = RowFirstStartTransaction;
                                    RowSecondStartTransaction1 = RowSecondStartTransaction;
                                    RowThirdStartTransaction1 = RowThirdStartTransaction;
                                    RowFourthStartTransaction1 = RowFourthStartTransaction;

                                }
                                #endregion
                                #region Hourly Checking Data
                                OuterCounter = 0;
                                for (int hi = 0; hi < HydrationMixerList.Count; hi++)
                                {
                                    List<PHCDataProcessList> HydrationProcessList = GetProcessList(HydrationMixerList[OuterCounter].ID);
                                    List<HPCDataHourlyCheck> HydrationHourlyCheckList = GethourlyCheckData(HydrationMixerList[OuterCounter].ID);
                                    //List<HPCDataAfterCycle> HydrationAFCList = GetAFCList(HydrationMixerList[OuterCounter].ID);
                                    List<HPCSummary> HydrationSummary = GetSummaryList(HydrationMixerList[OuterCounter].ID);
                                    FirstHourlyCheckRow = 0;
                                    bool isFound = true;
                                    bool Checking = false;
                                    int ThirdRow = 0;
                                    int SecondRow = 0;
                                    int FirstRow = 0;
                                    if (HydrationHourlyCheckList[HydrationHourlyCheckList.Count - 3].HeatTemp != "")
                                    {
                                        ThirdRow = Convert.ToInt32(Convert.ToDecimal(HydrationHourlyCheckList[HydrationHourlyCheckList.Count - 3].HeatTemp));
                                    }
                                    if (HydrationHourlyCheckList[HydrationHourlyCheckList.Count - 2].HeatTemp != "")
                                    {
                                        SecondRow = Convert.ToInt32(Convert.ToDecimal(HydrationHourlyCheckList[HydrationHourlyCheckList.Count - 2].HeatTemp));
                                    }
                                    if (HydrationHourlyCheckList[HydrationHourlyCheckList.Count - 1].HeatTemp != "")
                                    {
                                        FirstRow = Convert.ToInt32(Convert.ToDecimal(HydrationHourlyCheckList[HydrationHourlyCheckList.Count - 1].HeatTemp));
                                    }
                                    //DrawLines
                                    if (HydrationMixerList[OuterCounter].CycleID == 1)
                                    {

                                        for (int nm = 0; nm < HydrationHourlyCheckList.Count; nm++)
                                        {
                                            if (!isFound)
                                            {
                                                if (Checking)
                                                {
                                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction + ""].Value = "";
                                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction + ""].Value = "";
                                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Value = "";
                                                }
                                            }
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction + ""].Value = HydrationHourlyCheckList[FirstHourlyCheckRow].TimeSetup;
                                            Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction + ""].Value = HydrationHourlyCheckList[FirstHourlyCheckRow].HeatTemp;
                                            Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Value = HydrationHourlyCheckList[FirstHourlyCheckRow].WaterTemp;

                                            FirstHourlyCheckRow++;
                                            RowSecondStartTransaction++;
                                        }
                                        Cycel1HourlyCheckCount1 = HydrationHourlyCheckList.Count;
                                    }
                                    else if (HydrationMixerList[OuterCounter].CycleID == 2)
                                    {
                                        for (int nm = 0; nm < HydrationHourlyCheckList.Count; nm++)
                                        {
                                            if (!isFound)
                                            {
                                                if (Checking)
                                                {
                                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction + ""].Value = "";
                                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction + ""].Value = "";
                                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Value = "";
                                                }
                                            }
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction + ""].Value = HydrationHourlyCheckList[FirstHourlyCheckRow].TimeSetup;
                                            Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction + ""].Value = HydrationHourlyCheckList[FirstHourlyCheckRow].HeatTemp;
                                            Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Value = HydrationHourlyCheckList[FirstHourlyCheckRow].WaterTemp;

                                            FirstHourlyCheckRow++;
                                            RowThirdStartTransaction++;
                                        }
                                        Cycel2HourlyCheckCount1 = HydrationHourlyCheckList.Count;
                                    }
                                    else if (HydrationMixerList[OuterCounter].CycleID == 3)
                                    {
                                        for (int nm = 0; nm < HydrationHourlyCheckList.Count; nm++)
                                        {
                                            if (!isFound)
                                            {
                                                if (Checking)
                                                {
                                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction + ""].Value = "";
                                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction + ""].Value = "";
                                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Value = "";
                                                }
                                            }
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction + ""].Value = HydrationHourlyCheckList[FirstHourlyCheckRow].TimeSetup;
                                            Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction + ""].Value = HydrationHourlyCheckList[FirstHourlyCheckRow].HeatTemp;
                                            Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Value = HydrationHourlyCheckList[FirstHourlyCheckRow].WaterTemp;

                                            FirstHourlyCheckRow++;
                                            RowFourthStartTransaction++;
                                        }
                                        Cycel3HourlyCheckCount1 = HydrationHourlyCheckList.Count;
                                    }
                                    OuterCounter++;
                                }
                                if (HourlyBodyColumn)
                                {
                                    OuterCounter = 0;
                                    List<HPCDataHourlyCheck> HydrationHourlyCheckList = GethourlyCheckData(HydrationMixerList[OuterCounter].ID);
                                    RowSecondStartTransaction = 12;
                                    RowThirdStartTransaction = 12;
                                    RowFourthStartTransaction = 12;

                                    RowFirstStartTransaction = RowFirstStartTransaction1;
                                    RowSecondStartTransaction = RowSecondStartTransaction1;
                                    RowThirdStartTransaction = RowThirdStartTransaction1;
                                    RowFourthStartTransaction = RowFourthStartTransaction1;
                                    int[] LargeNumber = { Cycel1HourlyCheckCount1, Cycel2HourlyCheckCount1, Cycel3HourlyCheckCount1 };

                                    int maxValue = LargeNumber.Max();

                                    for (int drawlinei = 0; drawlinei < 4; drawlinei++)
                                    {
                                        if (drawlinei == 0)
                                        {
                                            for (int proi = 0; proi < maxValue; proi++)
                                            {
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Merge = true;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Value = (proi + 1);
                                                RowFirstStartTransaction++;
                                            }
                                        }
                                        else if (drawlinei == 1)
                                        {
                                            for (int proi = 0; proi < maxValue; proi++)
                                            {
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Merge = false;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Merge = true;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;


                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Merge = false;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Merge = true;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;


                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Merge = false;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Merge = true;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;

                                                RowSecondStartTransaction++;
                                            }
                                        }
                                        else if (drawlinei == 2)
                                        {
                                            for (int proi = 0; proi < maxValue; proi++)
                                            {
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Merge = false;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Merge = true;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;


                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Merge = false;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Merge = true;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;


                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Merge = false;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Merge = true;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;

                                                RowThirdStartTransaction++;
                                            }

                                        }
                                        else if (drawlinei == 3)
                                        {
                                            for (int proi = 0; proi < maxValue; proi++)
                                            {
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Merge = false;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Merge = true;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;

                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Merge = false;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Merge = true;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;

                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Merge = false;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Merge = true;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                                RowFourthStartTransaction++;
                                            }
                                            HourlyBodyColumn = false;
                                        }
                                    }

                                }
                                #endregion
                                #region Mixing Time Finished
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Merge = true;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.WrapText = true;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Value = "Mixing Time Finished";

                                OuterCounter = 0;
                                for (int hi = 0; hi < HydrationMixerList.Count; hi++)
                                {
                                    List<HPCSummary> HydrationSummary = GetSummaryList(HydrationMixerList[OuterCounter].ID);
                                    SecondAFCCheckRow = 0;

                                    //DrawLines
                                    if (HydrationMixerList[OuterCounter].CycleID == 1)
                                    {

                                        Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Merge = true;
                                        Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                        Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                        Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.WrapText = true;
                                        Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                        Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                        Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                        Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                        Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Value = Convert.ToInt32(HydrationSummary.Count).ToString() == "0" ? "" : HydrationSummary[0].MixingTimeFinished;
                                    }
                                    else if (HydrationMixerList[OuterCounter].CycleID == 2)
                                    {
                                        Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Merge = true;
                                        Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                        Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                        Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.WrapText = true;
                                        Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                        Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                        Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                        Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                        Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Value = Convert.ToInt32(HydrationSummary.Count).ToString() == "0" ? "" : HydrationSummary[0].MixingTimeFinished;
                                    }
                                    else if (HydrationMixerList[OuterCounter].CycleID == 3)
                                    {
                                        Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Merge = true;
                                        Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                        Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                        Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.WrapText = true;
                                        Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                        Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                        Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                        Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                        Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Value = Convert.ToInt32(HydrationSummary.Count).ToString() == "0" ? "" : HydrationSummary[0].MixingTimeFinished;
                                    }
                                    OuterCounter++;
                                }
                                TempRowSecondStartTransaction = RowSecondStartTransaction;
                                TempRowThirdStartTransaction = RowThirdStartTransaction;
                                TempRowFourthStartTransaction = RowFourthStartTransaction;

                                RowFirstStartTransaction++;
                                RowSecondStartTransaction++;
                                RowThirdStartTransaction++;
                                RowFourthStartTransaction++;
                                #endregion
                                #region After Finished Cycle Header
                                if (AfterFinishedCycle)
                                {
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Merge = false;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Merge = true;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Font.Bold = true;
                                    Datahere.Row(RowFirstStartTransaction).Height = 25.50;

                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Value = "After Finished Cycle";

                                    //First
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Merge = false;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Merge = true;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Value = "Time";

                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Merge = false;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Merge = true;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Value = "Temp (<60°c)";

                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Merge = false;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Merge = true;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Value = "Result (OK/NG)";
                                    //Second
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Merge = false;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Merge = true;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Value = "Time";

                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Merge = false;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Merge = true;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Value = "Temp (<60°c)";

                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Merge = false;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Merge = true;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Value = "Result (OK/NG)";
                                    //Third
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Merge = false;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Merge = true;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Value = "Time";

                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Merge = false;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Merge = true;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Value = "Temp (<60°c)";

                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Merge = false;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Merge = true;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.WrapText = true;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                    Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Value = "Result (OK/NG)";
                                    AfterFinishedCycle = false;
                                    RowFirstStartTransaction++;
                                    RowSecondStartTransaction++;
                                    RowThirdStartTransaction++;
                                    RowFourthStartTransaction++;

                                    RowFirstStartTransaction1 = RowFirstStartTransaction;
                                    RowSecondStartTransaction1 = RowSecondStartTransaction;
                                    RowThirdStartTransaction1 = RowThirdStartTransaction;
                                    RowFourthStartTransaction1 = RowFourthStartTransaction;

                                }
                                #endregion
                                #region After Finished Cycle Data
                                OuterCounter = 0;
                                for (int hi = 0; hi < HydrationMixerList.Count; hi++)
                                {
                                    List<PHCDataProcessList> HydrationProcessList = GetProcessList(HydrationMixerList[OuterCounter].ID);
                                    List<HPCDataHourlyCheck> HydrationHourlyCheckList = GethourlyCheckData(HydrationMixerList[OuterCounter].ID);
                                    List<HPCDataAfterCycle> HydrationAFCList = GetAFCList(HydrationMixerList[OuterCounter].ID);
                                    List<HPCSummary> HydrationSummary = GetSummaryList(HydrationMixerList[OuterCounter].ID);
                                    SecondAFCCheckRow = 0;

                                    //DrawLines
                                    if (HydrationMixerList[OuterCounter].CycleID == 1)
                                    {
                                        List<HydrationAfterCycle> AfterCycleListData = GetAfterCycleListData(ProcessDate, Cycle1HourlyCheck, TemplateID);
                                        List<HPCDataAfterCycle> hydrationAfterCycle = new List<HPCDataAfterCycle>();

                                        int IDCounter = 1;
                                        int CheckCounter = 0;
                                        for (int zi = 1; zi < AfterCycleListData.Count; zi++)
                                        {
                                            string JudgementType = "";
                                            if (Convert.ToInt32(Convert.ToDecimal(AfterCycleListData[zi].TempCheck)) <= 59)
                                            {
                                                CheckCounter++;
                                                JudgementType = "OK";
                                            }
                                            else
                                            {
                                                if (CheckCounter <= 3)
                                                {
                                                    if (CheckCounter == 3)
                                                    {
                                                        CheckCounter++;
                                                    }
                                                    else
                                                    {
                                                        CheckCounter = 0;
                                                    }
                                                }
                                                JudgementType = "NG";
                                            }
                                            if (CheckCounter <= 3)
                                            {
                                                hydrationAfterCycle.Add(new HPCDataAfterCycle
                                                {

                                                    TimeCheck = AfterCycleListData[zi].TimeCheck,
                                                    TempCheck = AfterCycleListData[zi].TempCheck,
                                                    Judgement = JudgementType
                                                });
                                                IDCounter++;
                                            }
                                        }
                                        for (int jk = 0; jk < HydrationAFCList.Count; jk++)
                                        {
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction + ""].Value = HydrationAFCList[SecondAFCCheckRow].TimeCheck;
                                            Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction + ""].Value = HydrationAFCList[SecondAFCCheckRow].TempCheck;
                                            Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Value = HydrationAFCList[SecondAFCCheckRow].Judgement;
                                            SecondAFCCheckRow++;
                                            RowSecondStartTransaction++;
                                        }
                                        Datahere.Cells["F" + TempRowSecondStartTransaction + ":L" + TempRowSecondStartTransaction].Value = HydrationAFCList[HydrationAFCList.Count - 3].TimeCheck;
                                        Cycel1HourlyCheckCount = HydrationAFCList.Count;
                                    }
                                    else if (HydrationMixerList[OuterCounter].CycleID == 2)
                                    {
                                        List<HydrationAfterCycle> AfterCycleListData = GetAfterCycleListData(ProcessDate, Cycle2HourlyCheck, TemplateID);
                                        List<HPCDataAfterCycle> hydrationAfterCycle = new List<HPCDataAfterCycle>();

                                        int IDCounter = 1;
                                        int CheckCounter = 0;
                                        for (int zi = 1; zi < AfterCycleListData.Count; zi++)
                                        {
                                            string JudgementType = "";
                                            if (Convert.ToInt32(Convert.ToDecimal(AfterCycleListData[zi].TempCheck)) <= 59)
                                            {
                                                CheckCounter++;
                                                JudgementType = "OK";
                                            }
                                            else
                                            {
                                                if (CheckCounter <= 3)
                                                {
                                                    if (CheckCounter == 3)
                                                    {
                                                        CheckCounter++;
                                                    }
                                                    else
                                                    {
                                                        CheckCounter = 0;
                                                    }
                                                }
                                                JudgementType = "NG";
                                            }
                                            if (CheckCounter <= 3)
                                            {
                                                hydrationAfterCycle.Add(new HPCDataAfterCycle
                                                {

                                                    TimeCheck = AfterCycleListData[zi].TimeCheck,
                                                    TempCheck = AfterCycleListData[zi].TempCheck,
                                                    Judgement = JudgementType
                                                });
                                                IDCounter++;
                                            }
                                        }
                                        for (int jk = 0; jk < HydrationAFCList.Count; jk++)
                                        {
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction + ""].Value = HydrationAFCList[SecondAFCCheckRow].TimeCheck;
                                            Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction + ""].Value = HydrationAFCList[SecondAFCCheckRow].TempCheck;
                                            Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Value = HydrationAFCList[SecondAFCCheckRow].Judgement;
                                            SecondAFCCheckRow++;
                                            RowThirdStartTransaction++;
                                        }
                                        Datahere.Cells["M" + TempRowThirdStartTransaction + ":S" + TempRowThirdStartTransaction].Value = HydrationAFCList[HydrationAFCList.Count - 3].TimeCheck;
                                        Cycel2HourlyCheckCount = HydrationAFCList.Count;
                                    }
                                    else if (HydrationMixerList[OuterCounter].CycleID == 3)
                                    {
                                        List<HydrationAfterCycle> AfterCycleListData = GetAfterCycleListData(ProcessDate, Cycle3HourlyCheck, TemplateID);
                                        List<HPCDataAfterCycle> hydrationAfterCycle = new List<HPCDataAfterCycle>();

                                        int IDCounter = 1;
                                        int CheckCounter = 0;
                                        for (int zi = 1; zi < AfterCycleListData.Count; zi++)
                                        {
                                            string JudgementType = "";
                                            if (Convert.ToInt32(Convert.ToDecimal(AfterCycleListData[zi].TempCheck)) <= 59)
                                            {
                                                CheckCounter++;
                                                JudgementType = "OK";
                                            }
                                            else
                                            {
                                                if (CheckCounter <= 3)
                                                {
                                                    if (CheckCounter == 3)
                                                    {
                                                        CheckCounter++;
                                                    }
                                                    else
                                                    {
                                                        CheckCounter = 0;
                                                    }
                                                }
                                                JudgementType = "NG";
                                            }
                                            if (CheckCounter <= 3)
                                            {
                                                hydrationAfterCycle.Add(new HPCDataAfterCycle
                                                {

                                                    TimeCheck = AfterCycleListData[zi].TimeCheck,
                                                    TempCheck = AfterCycleListData[zi].TempCheck,
                                                    Judgement = JudgementType
                                                });
                                                IDCounter++;
                                            }
                                        }
                                        for (int jk = 0; jk < HydrationAFCList.Count; jk++)
                                        {
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction + ""].Value = HydrationAFCList[SecondAFCCheckRow].TimeCheck;
                                            Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction + ""].Value = HydrationAFCList[SecondAFCCheckRow].TempCheck;
                                            Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Value = HydrationAFCList[SecondAFCCheckRow].Judgement;
                                            SecondAFCCheckRow++;
                                            RowFourthStartTransaction++;
                                        }
                                        Datahere.Cells["T" + TempRowFourthStartTransaction + ":Z" + TempRowFourthStartTransaction].Value = HydrationAFCList[HydrationAFCList.Count - 3].TimeCheck;
                                        Cycel3HourlyCheckCount = HydrationAFCList.Count;
                                    }
                                    OuterCounter++;
                                }
                                if (AfterCycleCheckRow)
                                {
                                    OuterCounter = 0;
                                    List<HPCDataAfterCycle> HydrationAFCList = GetAFCList(HydrationMixerList[OuterCounter].ID);



                                    int[] LargeNumber = { Cycel1HourlyCheckCount, Cycel2HourlyCheckCount, Cycel3HourlyCheckCount };

                                    int maxValue = LargeNumber.Max();



                                    RowFirstStartTransaction = RowFirstStartTransaction1;
                                    RowSecondStartTransaction = RowSecondStartTransaction1;
                                    RowThirdStartTransaction = RowThirdStartTransaction1;
                                    RowFourthStartTransaction = RowFourthStartTransaction1;

                                    for (int drawlinei = 0; drawlinei < 4; drawlinei++)
                                    {
                                        if (drawlinei == 0)
                                        {
                                            for (int proi = 0; proi < maxValue; proi++)
                                            {
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Merge = true;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Value = (proi + 1);
                                                RowFirstStartTransaction++;
                                            }

                                        }
                                        else if (drawlinei == 1)
                                        {

                                            for (int proi = 0; proi < maxValue; proi++)
                                            {
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Merge = false;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Merge = true;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["F" + RowSecondStartTransaction + ":G" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;


                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Merge = false;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Merge = true;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["H" + RowSecondStartTransaction + ":J" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;


                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Merge = false;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Merge = true;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["K" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;


                                                RowSecondStartTransaction++;
                                            }

                                        }
                                        else if (drawlinei == 2)
                                        {

                                            for (int proi = 0; proi < maxValue; proi++)
                                            {
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Merge = false;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Merge = true;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["M" + RowThirdStartTransaction + ":N" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;


                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Merge = false;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Merge = true;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["O" + RowThirdStartTransaction + ":Q" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;


                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Merge = false;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Merge = true;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["R" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;


                                                RowThirdStartTransaction++;
                                            }

                                        }
                                        else if (drawlinei == 3)
                                        {

                                            for (int proi = 0; proi < maxValue; proi++)
                                            {
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Merge = false;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Merge = true;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["T" + RowFourthStartTransaction + ":U" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;


                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Merge = false;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Merge = true;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["V" + RowFourthStartTransaction + ":X" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;


                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Merge = false;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Merge = true;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.WrapText = true;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                                Datahere.Cells["Y" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;

                                                RowFourthStartTransaction++;
                                            }
                                            AfterCycleCheckRow = false;
                                        }
                                    }

                                    RowFirstStartTransaction1 = RowFirstStartTransaction;
                                    RowSecondStartTransaction1 = RowSecondStartTransaction;
                                    RowThirdStartTransaction1 = RowThirdStartTransaction;
                                    RowFourthStartTransaction1 = RowFourthStartTransaction;

                                }
                                #endregion
                                #region Summary
                                OuterCounter = 0;
                                for (int hi = 0; hi < HydrationMixerList.Count; hi++)
                                {
                                    List<HPCSummary> HydrationSummary = GetSummaryList(HydrationMixerList[OuterCounter].ID);
                                    SecondAFCCheckRow = 0;

                                    //DrawLines
                                    if (HydrationMixerList[OuterCounter].CycleID == 1)
                                    {

                                        Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Value = Convert.ToInt32(HydrationSummary.Count).ToString() == "0" ? "0" : HydrationSummary[0].UnloadingTime;
                                        RowSecondStartTransaction++;
                                        Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Value = Convert.ToInt32(HydrationSummary.Count).ToString() == "0" ? "0" : HydrationSummary[0].OutputWeight;
                                        RowSecondStartTransaction++;
                                        Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Value = Convert.ToInt32(HydrationSummary.Count).ToString() == "0" ? "" : HydrationSummary[0].Remarks;
                                        RowSecondStartTransaction++;
                                    }
                                    else if (HydrationMixerList[OuterCounter].CycleID == 2)
                                    {
                                        Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Value = Convert.ToInt32(HydrationSummary.Count).ToString() == "0" ? "0" : HydrationSummary[0].UnloadingTime;
                                        RowThirdStartTransaction++;
                                        Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Value = Convert.ToInt32(HydrationSummary.Count).ToString() == "0" ? "0" : HydrationSummary[0].OutputWeight;
                                        RowThirdStartTransaction++;
                                        Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Value = Convert.ToInt32(HydrationSummary.Count).ToString() == "0" ? "" : HydrationSummary[0].Remarks;
                                        RowThirdStartTransaction++;
                                    }
                                    else if (HydrationMixerList[OuterCounter].CycleID == 3)
                                    {
                                        Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Value = Convert.ToInt32(HydrationSummary.Count).ToString() == "0" ? "0" : HydrationSummary[0].UnloadingTime;
                                        RowFourthStartTransaction++;
                                        Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Value = Convert.ToInt32(HydrationSummary.Count).ToString() == "0" ? "0" : HydrationSummary[0].OutputWeight;
                                        RowFourthStartTransaction++;
                                        Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Value = Convert.ToInt32(HydrationSummary.Count).ToString() == "0" ? "" : HydrationSummary[0].Remarks;
                                        RowFourthStartTransaction++;
                                    }
                                    OuterCounter++;
                                }
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Merge = true;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.WrapText = true;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Value = "Unloading Time Finished";
                                RowFirstStartTransaction++;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Merge = true;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.WrapText = true;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Value = "Output Weight (kg)";
                                RowFirstStartTransaction++;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Merge = true;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.WrapText = true;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                Datahere.Cells["A" + RowFirstStartTransaction + ":E" + RowFirstStartTransaction].Value = "Remarks";
                                RowFirstStartTransaction++;
                                OuterCounter = 0;
                                if (SummaryBodyColumn)
                                {
                                    RowSecondStartTransaction = RowSecondStartTransaction1;
                                    RowThirdStartTransaction = RowThirdStartTransaction1;
                                    RowFourthStartTransaction = RowFourthStartTransaction1;
                                    for (int hi = 0; hi < 3; hi++)
                                    {
                                        //DrawLines
                                        if (hi == 0)
                                        {
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Merge = true;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.WrapText = true;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                            RowSecondStartTransaction++;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Merge = true;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.WrapText = true;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                            RowSecondStartTransaction++;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Merge = true;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.WrapText = true;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["F" + RowSecondStartTransaction + ":L" + RowSecondStartTransaction + ""].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                            RowSecondStartTransaction++;
                                        }
                                        else if (hi == 1)
                                        {
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Merge = true;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.WrapText = true;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                            RowThirdStartTransaction++;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Merge = true;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.WrapText = true;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                            RowThirdStartTransaction++;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Merge = true;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.WrapText = true;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["M" + RowThirdStartTransaction + ":S" + RowThirdStartTransaction + ""].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                            RowThirdStartTransaction++;
                                        }
                                        else if (hi == 2)
                                        {
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Merge = true;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.WrapText = true;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                            RowFourthStartTransaction++;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Merge = true;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.WrapText = true;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                            RowFourthStartTransaction++;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Merge = true;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.WrapText = true;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.Border.Top.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.Border.Right.Style = ExcelBorderStyle.Thin;
                                            Datahere.Cells["T" + RowFourthStartTransaction + ":Z" + RowFourthStartTransaction + ""].Style.Border.Left.Style = ExcelBorderStyle.Thin;
                                            RowFourthStartTransaction++;
                                            SummaryBodyColumn = false;
                                        }
                                        OuterCounter++;
                                    }
                                }
                                #endregion

                            }
                            ResetCounterFlow++;
                            WorkSheetCounter++;

                            if (ResetCounterFlow == 1)
                            {
                                SheetName += "Mixer-" + HydrationIDList[DataCounter].MachineName;
                                if (HydrationIDList.Count == CounterFlow)
                                {
                                    Datahere = package.Workbook.Worksheets[NewWorkSheet];
                                    Datahere.Name = SheetName;
                                }
                            }
                            if (ResetCounterFlow == 2)
                            {
                                SheetName += " Mixer-" + HydrationIDList[DataCounter].MachineName;
                                Datahere = package.Workbook.Worksheets[NewWorkSheet];
                                Datahere.Name = SheetName;
                                WorkSheetID++;
                                SheetName = "";
                                ResetCounterFlow = 0;
                            }
                            CounterFlow++;
                            DataCounter++;
                        }
                    }
                    HiddenWorkSheet.Hidden = OfficeOpenXml.eWorkSheetHidden.Hidden;
                    return File(package.GetAsByteArray(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", filename);
                }
            }
            catch (Exception err)
            {
                string errmsg = "";
                if (err.InnerException != null)
                    errmsg = ("An error occured: " + err.InnerException.ToString());
                else
                    errmsg = ("An error occured: " + err.Message.ToString());
                error = true;
                return Json(new { success = false, errors = errmsg }, JsonRequestBehavior.AllowGet);
            }
            // return Json(new { success = true, msg = "Successfull Export Data." });

        }
        public ExcelWorksheet Copy(ExcelWorkbook workbook, string existingWorksheetName, string newWorksheetName)
        {
            ExcelWorksheet worksheet = workbook.Worksheets.Copy(existingWorksheetName, newWorksheetName);
            return worksheet;
        }
        public List<PHCData> GetHydrationList(string ProcessDate, string MixerList)
        {
            List<PHCData> HydrationListData = new List<PHCData>();
            try
            {
                using (MySqlConnection conn = new MySqlConnection(ConfigurationManager.ConnectionStrings["SHIN-ETSU-MYSQL"].ConnectionString.ToString()))

                {
                    conn.Open();
                    using (MySqlCommand cmdSql = conn.CreateCommand())
                    {
                        cmdSql.CommandType = CommandType.StoredProcedure;
                        cmdSql.CommandText = "HPC_HydrationIDList";
                        cmdSql.Parameters.Clear();
                        cmdSql.Parameters.AddWithValue("@_ProcessDate", ProcessDate);
                        cmdSql.Parameters.AddWithValue("@_DailyCondition", MixerList);

                        using (MySqlDataReader sdr = cmdSql.ExecuteReader())
                        {
                            while (sdr.Read())
                            {
                                HydrationListData.Add(new PHCData
                                {
                                    ID = Convert.ToInt32(sdr["ID"]),
                                    MixerID = Convert.ToInt32(sdr["MixerID"]),
                                    TemplateID = Convert.ToInt32(sdr["TemplateID"]),
                                    ProcessDate = sdr["ProcessDate"].ToString(),
                                    MachineName = sdr["MachineName"].ToString(),
                                });
                            }
                        }
                    }
                    conn.Close();
                }
            }
            catch (Exception err)
            {
                string errmsg;
                if (err.InnerException != null)
                    errmsg = "An error occured: " + err.InnerException.ToString();
                else
                    errmsg = "An error occured: " + err.Message.ToString();

            }
            return HydrationListData;
        }
        public List<PHCData> GetHydrationMixerList(string ProcessDate, int Mixer)
        {
            List<PHCData> HydrationListData = new List<PHCData>();
            try
            {
                using (MySqlConnection conn = new MySqlConnection(ConfigurationManager.ConnectionStrings["SHIN-ETSU-MYSQL"].ConnectionString.ToString()))

                {
                    conn.Open();
                    using (MySqlCommand cmdSql = conn.CreateCommand())
                    {
                        cmdSql.CommandType = CommandType.Text;
                        cmdSql.CommandText = "select ID,CycleID From   tHydration  where date_format(ProcessDate,'%Y-%m-%d') = date_format('" + ProcessDate + "','%Y-%m-%d')  and MixerID = " + Mixer + " and IsDeleted = 0";
                        cmdSql.Parameters.Clear();
                        cmdSql.Parameters.AddWithValue("@_ProcessDate", ProcessDate);
                        cmdSql.Parameters.AddWithValue("@_DailyCondition", Mixer);

                        using (MySqlDataReader sdr = cmdSql.ExecuteReader())
                        {
                            while (sdr.Read())
                            {
                                HydrationListData.Add(new PHCData
                                {
                                    ID = Convert.ToInt32(sdr["ID"]),
                                    CycleID = Convert.ToInt32(sdr["CycleID"])
                                });
                            }
                        }
                    }
                    conn.Close();
                }
            }
            catch (Exception err)
            {
                string errmsg;
                if (err.InnerException != null)
                    errmsg = "An error occured: " + err.InnerException.ToString();
                else
                    errmsg = "An error occured: " + err.Message.ToString();

            }
            return HydrationListData;
        }
        public List<PHCDataProcessList> GetProcessList(int HydrationID)
        {
            List<PHCDataProcessList> ProcessListData = new List<PHCDataProcessList>();
            try
            {
                using (MySqlConnection conn = new MySqlConnection(ConfigurationManager.ConnectionStrings["SHIN-ETSU-MYSQL"].ConnectionString.ToString()))

                {
                    conn.Open();
                    using (MySqlCommand cmdSql = conn.CreateCommand())
                    {
                        cmdSql.CommandType = CommandType.Text;
                        cmdSql.CommandText = "SELECT * FROM tHydrationProcess where IsDeleted = 0 and HydrationID = " + HydrationID + "";
                        using (MySqlDataReader sdr = cmdSql.ExecuteReader())
                        {
                            while (sdr.Read())
                            {
                                ProcessListData.Add(new PHCDataProcessList
                                {
                                    ID = Convert.ToInt32(sdr["ID"]),
                                    ProcessTemplateData = sdr["ProcessTemplateData"].ToString()
                                });
                            }
                        }
                    }
                    conn.Close();
                }
            }
            catch (Exception err)
            {
                string errmsg;
                if (err.InnerException != null)
                    errmsg = "An error occured: " + err.InnerException.ToString();
                else
                    errmsg = "An error occured: " + err.Message.ToString();

            }
            return ProcessListData;
        }
        public List<HPCDataHourlyCheck> GethourlyCheckData(int HydrationID)
        {
            List<HPCDataHourlyCheck> ProcessListData = new List<HPCDataHourlyCheck>();
            try
            {
                using (MySqlConnection conn = new MySqlConnection(ConfigurationManager.ConnectionStrings["SHIN-ETSU-MYSQL"].ConnectionString.ToString()))

                {
                    conn.Open();
                    using (MySqlCommand cmdSql = conn.CreateCommand())
                    {
                        cmdSql.CommandType = CommandType.StoredProcedure;
                        cmdSql.CommandText = "HPC_HourlyCheck_GetDatalist";
                        cmdSql.Parameters.AddWithValue("@_HydrationID", HydrationID);
                        using (MySqlDataReader sdr = cmdSql.ExecuteReader())
                        {
                            while (sdr.Read())
                            {
                                ProcessListData.Add(new HPCDataHourlyCheck
                                {
                                    TimeSetup = sdr["TimeSetup"].ToString(),
                                    WaterTemp = sdr["WaterTemp"].ToString(),
                                    HeatTemp = sdr["HeatTemp"].ToString()
                                });
                            }
                        }
                    }
                    conn.Close();
                }
            }
            catch (Exception err)
            {
                string errmsg;
                if (err.InnerException != null)
                    errmsg = "An error occured: " + err.InnerException.ToString();
                else
                    errmsg = "An error occured: " + err.Message.ToString();

            }
            return ProcessListData;
        }
        public List<HPCDataAfterCycle> GetAFCList(int HydrationID)
        {
            List<HPCDataAfterCycle> ProcessListData = new List<HPCDataAfterCycle>();
            try
            {
                using (MySqlConnection conn = new MySqlConnection(ConfigurationManager.ConnectionStrings["SHIN-ETSU-MYSQL"].ConnectionString.ToString()))

                {
                    conn.Open();
                    using (MySqlCommand cmdSql = conn.CreateCommand())
                    {
                        cmdSql.CommandType = CommandType.StoredProcedure;
                        cmdSql.CommandText = "HPC_AfterCycle_GetDatalist";
                        cmdSql.Parameters.AddWithValue("@_HydrationID", HydrationID);
                        using (MySqlDataReader sdr = cmdSql.ExecuteReader())
                        {
                            while (sdr.Read())
                            {
                                ProcessListData.Add(new HPCDataAfterCycle
                                {
                                    TimeCheck = sdr["TimeCheck"].ToString(),
                                    TempCheck = sdr["TempCheck"].ToString(),
                                    Judgement = sdr["Judgement"].ToString()
                                });
                            }
                        }
                    }
                    conn.Close();
                }
            }
            catch (Exception err)
            {
                string errmsg;
                if (err.InnerException != null)
                    errmsg = "An error occured: " + err.InnerException.ToString();
                else
                    errmsg = "An error occured: " + err.Message.ToString();

            }
            return ProcessListData;
        }
        public List<HPCSummary> GetSummaryList(int HydrationID)
        {
            List<HPCSummary> ProcessListData = new List<HPCSummary>();
            try
            {
                using (MySqlConnection conn = new MySqlConnection(ConfigurationManager.ConnectionStrings["SHIN-ETSU-MYSQL"].ConnectionString.ToString()))

                {
                    conn.Open();
                    using (MySqlCommand cmdSql = conn.CreateCommand())
                    {
                        cmdSql.CommandType = CommandType.Text;
                        cmdSql.CommandText = "SELECT  ts.UnloadingTime,ts.OutputWeight,ifnull( t.Remarks,'No Remarks') as Remarks,MixingTimeFinished FROM tHydrationSummary ts LEFT JOIN tHydration t on t.ID = ts.HydrationID where ts.IsDeleted = 0 and ts.HydrationID = " + HydrationID + "";
                        using (MySqlDataReader sdr = cmdSql.ExecuteReader())
                        {
                            while (sdr.Read())
                            {
                                ProcessListData.Add(new HPCSummary
                                {
                                    UnloadingTime = sdr["UnloadingTime"].ToString(),
                                    OutputWeight = sdr["OutputWeight"].ToString(),
                                    MixingTimeFinished = sdr["MixingTimeFinished"].ToString(),
                                    Remarks = sdr["Remarks"].ToString()
                                });
                            }
                        }
                    }
                    conn.Close();
                }
            }
            catch (Exception err)
            {
                string errmsg;
                if (err.InnerException != null)
                    errmsg = "An error occured: " + err.InnerException.ToString();
                else
                    errmsg = "An error occured: " + err.Message.ToString();

            }
            return ProcessListData;
        }
        public List<ProcessList> GetProcessDataList(int TemplateID)
        {
            List<ProcessList> ProcessListData = new List<ProcessList>();
            int CounterID = 1;
            try
            {
                using (MySqlConnection conn = new MySqlConnection(ConfigurationManager.ConnectionStrings["SHIN-ETSU-MYSQL"].ConnectionString.ToString()))

                {
                    conn.Open();
                    using (MySqlCommand cmdSql = conn.CreateCommand())
                    {
                        cmdSql.CommandType = CommandType.StoredProcedure;
                        cmdSql.CommandText = "HPC_Template_Processlist";
                        cmdSql.Parameters.AddWithValue("@_TemplateID", TemplateID);
                        using (MySqlDataReader sdr = cmdSql.ExecuteReader())
                        {
                            while (sdr.Read())
                            {
                                ProcessListData.Add(new ProcessList
                                {
                                    ID = CounterID,
                                    Process = sdr["Process"].ToString(),
                                });
                                CounterID++;
                            }
                        }
                    }
                    conn.Close();
                }
            }
            catch (Exception err)
            {
                string errmsg;
                if (err.InnerException != null)
                    errmsg = "An error occured: " + err.InnerException.ToString();
                else
                    errmsg = "An error occured: " + err.Message.ToString();

            }
            return ProcessListData;
        }
        public List<HydrationAfterCycle> GetAfterCycleListData(string TempProcessDate, string TempProcessTimeStart, int TemplateID)
        {
            List<HydrationAfterCycle> hydrationAfterCycle = new List<HydrationAfterCycle>();
            try
            {
                using (MySqlConnection conn = new MySqlConnection(ConfigurationManager.ConnectionStrings["SHIN-ETSU-MYSQL"].ConnectionString.ToString()))

                {
                    conn.Open();
                    using (MySqlCommand cmdSql = conn.CreateCommand())
                    {
                        cmdSql.CommandType = CommandType.StoredProcedure;
                        cmdSql.CommandText = "Hydration_AfterCycle_GetDataTemplist";
                        cmdSql.Parameters.Clear();
                        cmdSql.Parameters.AddWithValue("@_DateTransaction", TempProcessDate);
                        cmdSql.Parameters.AddWithValue("@_TimeTransaction", TempProcessTimeStart);
                        cmdSql.Parameters.AddWithValue("@_TemplateID", TemplateID);
                        using (MySqlDataReader sdr = cmdSql.ExecuteReader())
                        {
                            while (sdr.Read())
                            {
                                hydrationAfterCycle.Add(new HydrationAfterCycle
                                {

                                    TimeCheck = sdr["TimeCheck"].ToString(),
                                    TempCheck = sdr["TempCheck"].ToString(),
                                    Interval = Convert.ToDecimal(sdr["Interval"]),
                                });
                            }
                        }
                    }
                    conn.Close();
                }
            }
            catch (Exception err)
            {
                string errmsg;
                if (err.InnerException != null)
                    errmsg = "An error occured: " + err.InnerException.ToString();
                else
                    errmsg = "An error occured: " + err.Message.ToString();

            }
            return hydrationAfterCycle;
        }
    }
}
